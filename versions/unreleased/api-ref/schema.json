{"openapi": "3.1.0", "info": {}, "paths": {"/api/health": {"get": {"tags": ["Root"], "summary": "Health Check", "operationId": "health_check_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/version": {"get": {"tags": ["Root"], "summary": "Orion Info", "operationId": "orion_info_version_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/flows/": {"post": {"tags": ["Flows"], "summary": "Create Flow", "description": "Gracefully creates a new flow from the provided schema. If a flow with the\nsame name already exists, the existing flow is returned.", "operationId": "create_flow_flows__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Flow"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flows/{id}": {"get": {"tags": ["Flows"], "summary": "Read Flow", "description": "Get a flow by id.", "operationId": "read_flow_flows__id__get", "parameters": [{"description": "The flow id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Flow"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Flows"], "summary": "Delete Flow", "description": "Delete a flow by id.", "operationId": "delete_flow_flows__id__delete", "parameters": [{"description": "The flow id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Flows"], "summary": "Update Flow", "description": "Updates a flow.", "operationId": "update_flow_flows__id__patch", "parameters": [{"description": "The flow id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flows/count": {"post": {"tags": ["Flows"], "summary": "Count Flows", "description": "Count flows.", "operationId": "count_flows_flows_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_flows_flows_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Flows Flows Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flows/name/{name}": {"get": {"tags": ["Flows"], "summary": "Read Flow By Name", "description": "Get a flow by name.", "operationId": "read_flow_by_name_flows_name__name__get", "parameters": [{"description": "The name of the flow", "required": true, "schema": {"type": "string", "title": "Name", "description": "The name of the flow"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Flow"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flows/filter": {"post": {"tags": ["Flows"], "summary": "Read Flows", "description": "Query for flows.", "operationId": "read_flows_flows_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_flows_flows_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Flow"}, "type": "array", "title": "Response Read Flows Flows Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/": {"post": {"tags": ["Flow Runs"], "summary": "Create Flow Run", "description": "Create a flow run. If a flow run with the same flow_id and\nidempotency key already exists, the existing flow run will be returned.\n\nIf no state is provided, the flow run will be created in a PENDING state.", "operationId": "create_flow_run_flow_runs__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}": {"get": {"tags": ["Flow Runs"], "summary": "Read Flow Run", "description": "Get a flow run by id.", "operationId": "read_flow_run_flow_runs__id__get", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Flow Runs"], "summary": "Delete Flow Run", "description": "Delete a flow run by id.", "operationId": "delete_flow_run_flow_runs__id__delete", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Flow Runs"], "summary": "Update Flow Run", "description": "Updates a flow run.", "operationId": "update_flow_run_flow_runs__id__patch", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/count": {"post": {"tags": ["Flow Runs"], "summary": "Count Flow Runs", "description": "Query for flow runs.", "operationId": "count_flow_runs_flow_runs_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_flow_runs_flow_runs_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Flow Runs Flow Runs Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/lateness": {"post": {"tags": ["Flow Runs"], "summary": "Average Flow Run Lateness", "description": "Query for average flow-run lateness in seconds.", "operationId": "average_flow_run_lateness_flow_runs_lateness_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_average_flow_run_lateness_flow_runs_lateness_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "number", "title": "Response Average Flow Run Lateness Flow Runs Lateness Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/history": {"post": {"tags": ["Flow Runs"], "summary": "Flow Run History", "description": "Query for flow run history data across a given range and interval.", "operationId": "flow_run_history_flow_runs_history_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_flow_run_history_flow_runs_history_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/HistoryResponse"}, "type": "array", "title": "Response Flow Run History Flow Runs History Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/graph": {"get": {"tags": ["Flow Runs"], "summary": "Read Flow Run Graph V1", "description": "Get a task run dependency map for a given flow run.", "operationId": "read_flow_run_graph_v1_flow_runs__id__graph_get", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DependencyResult"}, "type": "array", "title": "Response Read Flow Run Graph V1 Flow Runs  Id  Graph Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/graph-v2": {"get": {"tags": ["Flow Runs"], "summary": "Read Flow Run Graph V2", "description": "Get a graph of the tasks and subflow runs for the given flow run", "operationId": "read_flow_run_graph_v2_flow_runs__id__graph_v2_get", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"description": "Only include runs that start or end after this time.", "required": false, "schema": {"type": "string", "format": "date-time", "title": "Since", "description": "Only include runs that start or end after this time.", "default": "0001-01-01T00:00:00"}, "name": "since", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Graph"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/resume": {"post": {"tags": ["Flow Runs"], "summary": "Resume Flow Run", "description": "Resume a paused flow run.", "operationId": "resume_flow_run_flow_runs__id__resume_post", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_resume_flow_run_flow_runs__id__resume_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrchestrationResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/filter": {"post": {"tags": ["Flow Runs"], "summary": "Read Flow Runs", "description": "Query for flow runs.", "operationId": "read_flow_runs_flow_runs_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_flow_runs_flow_runs_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FlowRunResponse"}, "type": "array", "title": "Response Read Flow Runs Flow Runs Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/set_state": {"post": {"tags": ["Flow Runs"], "summary": "Set Flow Run State", "description": "Set a flow run state, invoking any orchestration rules.", "operationId": "set_flow_run_state_flow_runs__id__set_state_post", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_set_flow_run_state_flow_runs__id__set_state_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrchestrationResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/input": {"post": {"tags": ["Flow Runs"], "summary": "Create Flow Run Input", "description": "Create a key/value input for a flow run.", "operationId": "create_flow_run_input_flow_runs__id__input_post", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_create_flow_run_input_flow_runs__id__input_post"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/input/filter": {"post": {"tags": ["Flow Runs"], "summary": "Filter Flow Run Input", "description": "Filter flow run inputs by key prefix", "operationId": "filter_flow_run_input_flow_runs__id__input_filter_post", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_filter_flow_run_input_flow_runs__id__input_filter_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FlowRunInput"}, "type": "array", "title": "Response Filter Flow Run Input Flow Runs  Id  Input Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_runs/{id}/input/{key}": {"get": {"tags": ["Flow Runs"], "summary": "Read Flow Run Input", "description": "Create a value from a flow run input", "operationId": "read_flow_run_input_flow_runs__id__input__key__get", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"description": "The input key", "required": true, "schema": {"type": "string", "title": "Key", "description": "The input key"}, "name": "key", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Flow Runs"], "summary": "Delete Flow Run Input", "description": "Delete a flow run input", "operationId": "delete_flow_run_input_flow_runs__id__input__key__delete", "parameters": [{"description": "The flow run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id"}, "name": "id", "in": "path"}, {"description": "The input key", "required": true, "schema": {"type": "string", "title": "Key", "description": "The input key"}, "name": "key", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_runs/": {"post": {"tags": ["Task Runs"], "summary": "Create Task Run", "description": "Create a task run. If a task run with the same flow_run_id,\ntask_key, and dynamic_key already exists, the existing task\nrun will be returned.\n\nIf no state is provided, the task run will be created in a PENDING state.", "operationId": "create_task_run_task_runs__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskRunCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskRun"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_runs/{id}": {"get": {"tags": ["Task Runs"], "summary": "Read Task Run", "description": "Get a task run by id.", "operationId": "read_task_run_task_runs__id__get", "parameters": [{"description": "The task run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The task run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskRun"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Task Runs"], "summary": "Delete Task Run", "description": "Delete a task run by id.", "operationId": "delete_task_run_task_runs__id__delete", "parameters": [{"description": "The task run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The task run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Task Runs"], "summary": "Update Task Run", "description": "Updates a task run.", "operationId": "update_task_run_task_runs__id__patch", "parameters": [{"description": "The task run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The task run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskRunUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_runs/count": {"post": {"tags": ["Task Runs"], "summary": "Count Task Runs", "description": "Count task runs.", "operationId": "count_task_runs_task_runs_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_task_runs_task_runs_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Task Runs Task Runs Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_runs/history": {"post": {"tags": ["Task Runs"], "summary": "Task Run History", "description": "Query for task run history data across a given range and interval.", "operationId": "task_run_history_task_runs_history_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_task_run_history_task_runs_history_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/HistoryResponse"}, "type": "array", "title": "Response Task Run History Task Runs History Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_runs/filter": {"post": {"tags": ["Task Runs"], "summary": "Read Task Runs", "description": "Query for task runs.", "operationId": "read_task_runs_task_runs_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_task_runs_task_runs_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TaskRun"}, "type": "array", "title": "Response Read Task Runs Task Runs Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_runs/{id}/set_state": {"post": {"tags": ["Task Runs"], "summary": "Set Task Run State", "description": "Set a task run state, invoking any orchestration rules.", "operationId": "set_task_run_state_task_runs__id__set_state_post", "parameters": [{"description": "The task run id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The task run id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_set_task_run_state_task_runs__id__set_state_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrchestrationResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_run_states/{id}": {"get": {"tags": ["Flow Run States"], "summary": "Read Flow Run State", "description": "Get a flow run state by id.", "operationId": "read_flow_run_state_flow_run_states__id__get", "parameters": [{"description": "The flow run state id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run state id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/State"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_run_states/": {"get": {"tags": ["Flow Run States"], "summary": "Read Flow Run States", "description": "Get states associated with a flow run.", "operationId": "read_flow_run_states_flow_run_states__get", "parameters": [{"required": true, "schema": {"type": "string", "format": "uuid", "title": "Flow Run Id"}, "name": "flow_run_id", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/State"}, "type": "array", "title": "Response Read Flow Run States Flow Run States  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_run_states/{id}": {"get": {"tags": ["Task Run States"], "summary": "Read Task Run State", "description": "Get a task run state by id.", "operationId": "read_task_run_state_task_run_states__id__get", "parameters": [{"description": "The task run state id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The task run state id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/State"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/task_run_states/": {"get": {"tags": ["Task Run States"], "summary": "Read Task Run States", "description": "Get states associated with a task run.", "operationId": "read_task_run_states_task_run_states__get", "parameters": [{"required": true, "schema": {"type": "string", "format": "uuid", "title": "Task Run Id"}, "name": "task_run_id", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/State"}, "type": "array", "title": "Response Read Task Run States Task Run States  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_run_notification_policies/": {"post": {"tags": ["Flow Run Notification Policies"], "summary": "Create Flow Run Notification Policy", "description": "Creates a new flow run notification policy.", "operationId": "create_flow_run_notification_policy_flow_run_notification_policies__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunNotificationPolicyCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunNotificationPolicy"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_run_notification_policies/{id}": {"get": {"tags": ["Flow Run Notification Policies"], "summary": "Read Flow Run Notification Policy", "description": "Get a flow run notification policy by id.", "operationId": "read_flow_run_notification_policy_flow_run_notification_policies__id__get", "parameters": [{"description": "The flow run notification policy id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run notification policy id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunNotificationPolicy"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Flow Run Notification Policies"], "summary": "Delete Flow Run Notification Policy", "description": "Delete a flow run notification policy by id.", "operationId": "delete_flow_run_notification_policy_flow_run_notification_policies__id__delete", "parameters": [{"description": "The flow run notification policy id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run notification policy id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Flow Run Notification Policies"], "summary": "Update Flow Run Notification Policy", "description": "Updates an existing flow run notification policy.", "operationId": "update_flow_run_notification_policy_flow_run_notification_policies__id__patch", "parameters": [{"description": "The flow run notification policy id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run notification policy id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunNotificationPolicyUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/flow_run_notification_policies/filter": {"post": {"tags": ["Flow Run Notification Policies"], "summary": "Read Flow Run Notification Policies", "description": "Query for flow run notification policies.", "operationId": "read_flow_run_notification_policies_flow_run_notification_policies_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_flow_run_notification_policies_flow_run_notification_policies_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FlowRunNotificationPolicy"}, "type": "array", "title": "Response Read Flow Run Notification Policies Flow Run Notification Policies Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/": {"post": {"tags": ["Deployments"], "summary": "Create Deployment", "description": "Gracefully creates a new deployment from the provided schema. If a deployment with\nthe same name and flow_id already exists, the deployment is updated.\n\nIf the deployment has an active schedule, flow runs will be scheduled.\nWhen upserting, any scheduled runs from the existing deployment will be deleted.", "operationId": "create_deployment_deployments__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeploymentCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeploymentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}": {"get": {"tags": ["Deployments"], "summary": "Read Deployment", "description": "Get a deployment by id.", "operationId": "read_deployment_deployments__id__get", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeploymentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Deployments"], "summary": "Delete Deployment", "description": "Delete a deployment by id.", "operationId": "delete_deployment_deployments__id__delete", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Deployments"], "summary": "Update Deployment", "operationId": "update_deployment_deployments__id__patch", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeploymentUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/name/{flow_name}/{deployment_name}": {"get": {"tags": ["Deployments"], "summary": "Read Deployment By Name", "description": "Get a deployment using the name of the flow and the deployment.", "operationId": "read_deployment_by_name_deployments_name__flow_name___deployment_name__get", "parameters": [{"description": "The name of the flow", "required": true, "schema": {"type": "string", "title": "Flow Name", "description": "The name of the flow"}, "name": "flow_name", "in": "path"}, {"description": "The name of the deployment", "required": true, "schema": {"type": "string", "title": "Deployment Name", "description": "The name of the deployment"}, "name": "deployment_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeploymentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/filter": {"post": {"tags": ["Deployments"], "summary": "Read Deployments", "description": "Query for deployments.", "operationId": "read_deployments_deployments_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_deployments_deployments_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DeploymentResponse"}, "type": "array", "title": "Response Read Deployments Deployments Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/get_scheduled_flow_runs": {"post": {"tags": ["Deployments"], "summary": "Get Scheduled Flow Runs For Deployments", "description": "Get scheduled runs for a set of deployments. Used by a runner to poll for work.", "operationId": "get_scheduled_flow_runs_for_deployments_deployments_get_scheduled_flow_runs_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_get_scheduled_flow_runs_for_deployments_deployments_get_scheduled_flow_runs_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FlowRunResponse"}, "type": "array", "title": "Response Get Scheduled Flow Runs For Deployments Deployments Get Scheduled Flow Runs Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/count": {"post": {"tags": ["Deployments"], "summary": "Count Deployments", "description": "Count deployments.", "operationId": "count_deployments_deployments_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_deployments_deployments_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Deployments Deployments Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}/schedule": {"post": {"tags": ["Deployments"], "summary": "Schedule Deployment", "description": "Schedule runs for a deployment. For backfills, provide start/end times in the past.\n\nThis function will generate the minimum number of runs that satisfy the min\nand max times, and the min and max counts. Specifically, the following order\nwill be respected.\n\n    - Runs will be generated starting on or after the `start_time`\n    - No more than `max_runs` runs will be generated\n    - No runs will be generated after `end_time` is reached\n    - At least `min_runs` runs will be generated\n    - Runs will be generated until at least `start_time + min_time` is reached", "operationId": "schedule_deployment_deployments__id__schedule_post", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_schedule_deployment_deployments__id__schedule_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}/set_schedule_active": {"post": {"tags": ["Deployments"], "summary": "Set Schedule Active", "description": "Set a deployment schedule to active. Runs will be scheduled immediately.", "operationId": "set_schedule_active_deployments__id__set_schedule_active_post", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}/set_schedule_inactive": {"post": {"tags": ["Deployments"], "summary": "Set Schedule Inactive", "description": "Set a deployment schedule to inactive. Any auto-scheduled runs still in a Scheduled\nstate will be deleted.", "operationId": "set_schedule_inactive_deployments__id__set_schedule_inactive_post", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}/create_flow_run": {"post": {"tags": ["Deployments"], "summary": "Create Flow Run From Deployment", "description": "Create a flow run from a deployment.\n\nAny parameters not provided will be inferred from the deployment's parameters.\nIf tags are not provided, the deployment's tags will be used.\n\nIf no state is provided, the flow run will be created in a SCHEDULED state.", "operationId": "create_flow_run_from_deployment_deployments__id__create_flow_run_post", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeploymentFlowRunCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlowRunResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}/work_queue_check": {"get": {"tags": ["Deployments"], "summary": "Work Queue Check For Deployment", "description": "Get list of work-queues that are able to pick up the specified deployment.\n\nThis endpoint is intended to be used by the UI to provide users warnings\nabout deployments that are unable to be executed because there are no work\nqueues that will pick up their runs, based on existing filter criteria. It\nmay be deprecated in the future because there is not a strict relationship\nbetween work queues and deployments.", "operationId": "work_queue_check_for_deployment_deployments__id__work_queue_check_get", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkQueue"}, "type": "array", "title": "Response Work Queue Check For Deployment Deployments  Id  Work Queue Check Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "deprecated": true}}, "/api/deployments/{id}/schedules": {"get": {"tags": ["Deployments"], "summary": "Read Deployment Schedules", "operationId": "read_deployment_schedules_deployments__id__schedules_get", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DeploymentSchedule"}, "type": "array", "title": "Response Read Deployment Schedules Deployments  Id  Schedules Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Deployments"], "summary": "Create Deployment Schedules", "operationId": "create_deployment_schedules_deployments__id__schedules_post", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DeploymentScheduleCreate"}, "type": "array", "title": "Schedules", "description": "The schedules to create"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DeploymentSchedule"}, "type": "array", "title": "Response Create Deployment Schedules Deployments  Id  Schedules Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/deployments/{id}/schedules/{schedule_id}": {"delete": {"tags": ["Deployments"], "summary": "Delete Deployment Schedule", "operationId": "delete_deployment_schedule_deployments__id__schedules__schedule_id__delete", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"description": "The schedule id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Schedule Id", "description": "The schedule id"}, "name": "schedule_id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Deployments"], "summary": "Update Deployment Schedule", "operationId": "update_deployment_schedule_deployments__id__schedules__schedule_id__patch", "parameters": [{"description": "The deployment id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The deployment id"}, "name": "id", "in": "path"}, {"description": "The schedule id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Schedule Id", "description": "The schedule id"}, "name": "schedule_id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/DeploymentScheduleUpdate"}], "title": "Schedule", "description": "The updated schedule"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/saved_searches/": {"put": {"tags": ["SavedSearches"], "summary": "Create Saved Search", "description": "Gracefully creates a new saved search from the provided schema.\n\nIf a saved search with the same name already exists, the saved search's fields are\nreplaced.", "operationId": "create_saved_search_saved_searches__put", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SavedSearchCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SavedSearch"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/saved_searches/{id}": {"get": {"tags": ["SavedSearches"], "summary": "Read Saved Search", "description": "Get a saved search by id.", "operationId": "read_saved_search_saved_searches__id__get", "parameters": [{"description": "The saved search id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The saved search id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SavedSearch"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["SavedSearches"], "summary": "Delete Saved Search", "description": "Delete a saved search by id.", "operationId": "delete_saved_search_saved_searches__id__delete", "parameters": [{"description": "The saved search id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The saved search id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/saved_searches/filter": {"post": {"tags": ["SavedSearches"], "summary": "Read Saved Searches", "description": "Query for saved searches.", "operationId": "read_saved_searches_saved_searches_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_saved_searches_saved_searches_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SavedSearch"}, "type": "array", "title": "Response Read Saved Searches Saved Searches Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/logs/": {"post": {"tags": ["Logs"], "summary": "Create Logs", "description": "Create new logs from the provided schema.", "operationId": "create_logs_logs__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/LogCreate"}, "type": "array", "title": "Logs"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/logs/filter": {"post": {"tags": ["Logs"], "summary": "Read Logs", "description": "Query for logs.", "operationId": "read_logs_logs_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_logs_logs_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Log"}, "type": "array", "title": "Response Read Logs Logs Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/concurrency_limits/": {"post": {"tags": ["Concurrency Limits"], "summary": "Create Concurrency Limit", "operationId": "create_concurrency_limit_concurrency_limits__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimitCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimit"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/concurrency_limits/{id}": {"get": {"tags": ["Concurrency Limits"], "summary": "Read Concurrency Limit", "description": "Get a concurrency limit by id.\n\nThe `active slots` field contains a list of TaskRun IDs currently using a\nconcurrency slot for the specified tag.", "operationId": "read_concurrency_limit_concurrency_limits__id__get", "parameters": [{"description": "The concurrency limit id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The concurrency limit id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimit"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Concurrency Limits"], "summary": "Delete Concurrency Limit", "operationId": "delete_concurrency_limit_concurrency_limits__id__delete", "parameters": [{"description": "The concurrency limit id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The concurrency limit id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/concurrency_limits/tag/{tag}": {"get": {"tags": ["Concurrency Limits"], "summary": "Read Concurrency Limit By Tag", "description": "Get a concurrency limit by tag.\n\nThe `active slots` field contains a list of TaskRun IDs currently using a\nconcurrency slot for the specified tag.", "operationId": "read_concurrency_limit_by_tag_concurrency_limits_tag__tag__get", "parameters": [{"description": "The tag name", "required": true, "schema": {"type": "string", "title": "Tag", "description": "The tag name"}, "name": "tag", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimit"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Concurrency Limits"], "summary": "Delete Concurrency Limit By Tag", "operationId": "delete_concurrency_limit_by_tag_concurrency_limits_tag__tag__delete", "parameters": [{"description": "The tag name", "required": true, "schema": {"type": "string", "title": "Tag", "description": "The tag name"}, "name": "tag", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/concurrency_limits/filter": {"post": {"tags": ["Concurrency Limits"], "summary": "Read Concurrency Limits", "description": "Query for concurrency limits.\n\nFor each concurrency limit the `active slots` field contains a list of TaskRun IDs\ncurrently using a concurrency slot for the specified tag.", "operationId": "read_concurrency_limits_concurrency_limits_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_concurrency_limits_concurrency_limits_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ConcurrencyLimit"}, "type": "array", "title": "Response Read Concurrency Limits Concurrency Limits Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/concurrency_limits/tag/{tag}/reset": {"post": {"tags": ["Concurrency Limits"], "summary": "Reset Concurrency Limit By Tag", "operationId": "reset_concurrency_limit_by_tag_concurrency_limits_tag__tag__reset_post", "parameters": [{"description": "The tag name", "required": true, "schema": {"type": "string", "title": "Tag", "description": "The tag name"}, "name": "tag", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_reset_concurrency_limit_by_tag_concurrency_limits_tag__tag__reset_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/concurrency_limits/": {"post": {"tags": ["Concurrency Limits V2"], "summary": "Create Concurrency Limit V2", "operationId": "create_concurrency_limit_v2_v2_concurrency_limits__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimitV2Create"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimitV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/concurrency_limits/{id_or_name}": {"get": {"tags": ["Concurrency Limits V2"], "summary": "Read Concurrency Limit V2", "operationId": "read_concurrency_limit_v2_v2_concurrency_limits__id_or_name__get", "parameters": [{"description": "The ID or name of the concurrency limit", "required": true, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "string"}], "title": "Id Or Name", "description": "The ID or name of the concurrency limit"}, "name": "id_or_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimitV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Concurrency Limits V2"], "summary": "Delete Concurrency Limit V2", "operationId": "delete_concurrency_limit_v2_v2_concurrency_limits__id_or_name__delete", "parameters": [{"description": "The ID or name of the concurrency limit", "required": true, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "string"}], "title": "Id Or Name", "description": "The ID or name of the concurrency limit"}, "name": "id_or_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Concurrency Limits V2"], "summary": "Update Concurrency Limit V2", "operationId": "update_concurrency_limit_v2_v2_concurrency_limits__id_or_name__patch", "parameters": [{"description": "The ID or name of the concurrency limit", "required": true, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "string"}], "title": "Id Or Name", "description": "The ID or name of the concurrency limit"}, "name": "id_or_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyLimitV2Update"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/concurrency_limits/filter": {"post": {"tags": ["Concurrency Limits V2"], "summary": "Read All Concurrency Limits V2", "operationId": "read_all_concurrency_limits_v2_v2_concurrency_limits_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_all_concurrency_limits_v2_v2_concurrency_limits_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ConcurrencyLimitV2"}, "type": "array", "title": "Response Read All Concurrency Limits V2 V2 Concurrency Limits Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/concurrency_limits/increment": {"post": {"tags": ["Concurrency Limits V2"], "summary": "Bulk Increment Active Slots", "operationId": "bulk_increment_active_slots_v2_concurrency_limits_increment_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_bulk_increment_active_slots_v2_concurrency_limits_increment_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/MinimalConcurrencyLimitResponse"}, "type": "array", "title": "Response Bulk Increment Active Slots V2 Concurrency Limits Increment Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/concurrency_limits/decrement": {"post": {"tags": ["Concurrency Limits V2"], "summary": "Bulk Decrement Active Slots", "operationId": "bulk_decrement_active_slots_v2_concurrency_limits_decrement_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_bulk_decrement_active_slots_v2_concurrency_limits_decrement_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/MinimalConcurrencyLimitResponse"}, "type": "array", "title": "Response Bulk Decrement Active Slots V2 Concurrency Limits Decrement Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/": {"post": {"tags": ["Block types"], "summary": "Create Block Type", "description": "Create a new block type", "operationId": "create_block_type_block_types__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockTypeCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockType"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/{id}": {"get": {"tags": ["Block types"], "summary": "Read Block Type By Id", "description": "Get a block type by ID.", "operationId": "read_block_type_by_id_block_types__id__get", "parameters": [{"description": "The block type ID", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block type ID"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockType"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Block types"], "summary": "Delete Block Type", "operationId": "delete_block_type_block_types__id__delete", "parameters": [{"description": "The block type ID", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block type ID"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Block types"], "summary": "Update Block Type", "description": "Update a block type.", "operationId": "update_block_type_block_types__id__patch", "parameters": [{"description": "The block type ID", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block type ID"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockTypeUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/slug/{slug}": {"get": {"tags": ["Block types"], "summary": "Read Block Type By Slug", "description": "Get a block type by name.", "operationId": "read_block_type_by_slug_block_types_slug__slug__get", "parameters": [{"description": "The block type name", "required": true, "schema": {"type": "string", "title": "Slug", "description": "The block type name"}, "name": "slug", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockType"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/filter": {"post": {"tags": ["Block types"], "summary": "Read Block Types", "description": "Gets all block types. Optionally limit return with limit and offset.", "operationId": "read_block_types_block_types_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_block_types_block_types_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/BlockType"}, "type": "array", "title": "Response Read Block Types Block Types Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/slug/{slug}/block_documents": {"get": {"tags": ["Block types", "Block types", "Block documents"], "summary": "Read Block Documents For Block Type", "operationId": "read_block_documents_for_block_type_block_types_slug__slug__block_documents_get", "parameters": [{"description": "The block type name", "required": true, "schema": {"type": "string", "title": "Slug", "description": "The block type name"}, "name": "slug", "in": "path"}, {"description": "Whether to include sensitive values in the block document.", "required": false, "schema": {"type": "boolean", "title": "Include Secrets", "description": "Whether to include sensitive values in the block document.", "default": false}, "name": "include_secrets", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/BlockDocument"}, "type": "array", "title": "Response Read Block Documents For Block Type Block Types Slug  Slug  Block Documents Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/slug/{slug}/block_documents/name/{block_document_name}": {"get": {"tags": ["Block types", "Block types", "Block documents"], "summary": "Read Block Document By Name For Block Type", "operationId": "read_block_document_by_name_for_block_type_block_types_slug__slug__block_documents_name__block_document_name__get", "parameters": [{"description": "The block type name", "required": true, "schema": {"type": "string", "title": "Slug", "description": "The block type name"}, "name": "slug", "in": "path"}, {"description": "The block type name", "required": true, "schema": {"type": "string", "title": "Block Document Name", "description": "The block type name"}, "name": "block_document_name", "in": "path"}, {"description": "Whether to include sensitive values in the block document.", "required": false, "schema": {"type": "boolean", "title": "Include Secrets", "description": "Whether to include sensitive values in the block document.", "default": false}, "name": "include_secrets", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockDocument"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_types/install_system_block_types": {"post": {"tags": ["Block types"], "summary": "Install System Block Types", "operationId": "install_system_block_types_block_types_install_system_block_types_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_documents/": {"post": {"tags": ["Block documents"], "summary": "Create Block Document", "description": "Create a new block document.", "operationId": "create_block_document_block_documents__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockDocumentCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockDocument"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_documents/filter": {"post": {"tags": ["Block documents"], "summary": "Read Block Documents", "description": "Query for block documents.", "operationId": "read_block_documents_block_documents_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_block_documents_block_documents_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/BlockDocument"}, "type": "array", "title": "Response Read Block Documents Block Documents Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_documents/count": {"post": {"tags": ["Block documents"], "summary": "Count Block Documents", "description": "Count block documents.", "operationId": "count_block_documents_block_documents_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_block_documents_block_documents_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Block Documents Block Documents Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_documents/{id}": {"get": {"tags": ["Block documents"], "summary": "Read Block Document By Id", "operationId": "read_block_document_by_id_block_documents__id__get", "parameters": [{"description": "The block document id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block document id"}, "name": "id", "in": "path"}, {"description": "Whether to include sensitive values in the block document.", "required": false, "schema": {"type": "boolean", "title": "Include Secrets", "description": "Whether to include sensitive values in the block document.", "default": false}, "name": "include_secrets", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockDocument"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Block documents"], "summary": "Delete Block Document", "operationId": "delete_block_document_block_documents__id__delete", "parameters": [{"description": "The block document id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block document id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Block documents"], "summary": "Update Block Document Data", "operationId": "update_block_document_data_block_documents__id__patch", "parameters": [{"description": "The block document id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block document id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockDocumentUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/": {"post": {"tags": ["Work Pools"], "summary": "Create Work Pool", "description": "Creates a new work pool. If a work pool with the same\nname already exists, an error will be raised.", "operationId": "create_work_pool_work_pools__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkPoolCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkPoolResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{name}": {"get": {"tags": ["Work Pools"], "summary": "Read Work Pool", "description": "Read a work pool by name", "operationId": "read_work_pool_work_pools__name__get", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkPoolResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Work Pools"], "summary": "Delete Work Pool", "description": "Delete a work pool", "operationId": "delete_work_pool_work_pools__name__delete", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Work Pools"], "summary": "Update Work Pool", "description": "Update a work pool", "operationId": "update_work_pool_work_pools__name__patch", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkPoolUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/filter": {"post": {"tags": ["Work Pools"], "summary": "Read Work Pools", "description": "Read multiple work pools", "operationId": "read_work_pools_work_pools_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_work_pools_work_pools_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkPoolResponse"}, "type": "array", "title": "Response Read Work Pools Work Pools Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/count": {"post": {"tags": ["Work Pools"], "summary": "Count Work Pools", "description": "Count work pools", "operationId": "count_work_pools_work_pools_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_work_pools_work_pools_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Work Pools Work Pools Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{name}/get_scheduled_flow_runs": {"post": {"tags": ["Work Pools"], "summary": "Get Scheduled Flow Runs", "description": "Load scheduled runs for a worker", "operationId": "get_scheduled_flow_runs_work_pools__name__get_scheduled_flow_runs_post", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_get_scheduled_flow_runs_work_pools__name__get_scheduled_flow_runs_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkerFlowRunResponse"}, "type": "array", "title": "Response Get Scheduled Flow Runs Work Pools  Name  Get Scheduled Flow Runs Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{work_pool_name}/queues": {"post": {"tags": ["Work Pools"], "summary": "Create Work Queue", "description": "Creates a new work pool queue. If a work pool queue with the same\nname already exists, an error will be raised.", "operationId": "create_work_queue_work_pools__work_pool_name__queues_post", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{work_pool_name}/queues/{name}": {"get": {"tags": ["Work Pools"], "summary": "Read Work Queue", "description": "Read a work pool queue", "operationId": "read_work_queue_work_pools__work_pool_name__queues__name__get", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"description": "The work pool queue name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool queue name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Work Pools"], "summary": "Delete Work Queue", "description": "Delete a work pool queue", "operationId": "delete_work_queue_work_pools__work_pool_name__queues__name__delete", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"description": "The work pool queue name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool queue name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Work Pools"], "summary": "Update Work Queue", "description": "Update a work pool queue", "operationId": "update_work_queue_work_pools__work_pool_name__queues__name__patch", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"description": "The work pool queue name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work pool queue name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{work_pool_name}/queues/filter": {"post": {"tags": ["Work Pools"], "summary": "Read Work Queues", "description": "Read all work pool queues", "operationId": "read_work_queues_work_pools__work_pool_name__queues_filter_post", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_work_queues_work_pools__work_pool_name__queues_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkQueueResponse"}, "type": "array", "title": "Response Read Work Queues Work Pools  Work Pool Name  Queues Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{work_pool_name}/workers/heartbeat": {"post": {"tags": ["Work Pools"], "summary": "Worker Heartbeat", "operationId": "worker_heartbeat_work_pools__work_pool_name__workers_heartbeat_post", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_worker_heartbeat_work_pools__work_pool_name__workers_heartbeat_post"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_pools/{work_pool_name}/workers/filter": {"post": {"tags": ["Work Pools"], "summary": "Read Workers", "description": "Read all worker processes", "operationId": "read_workers_work_pools__work_pool_name__workers_filter_post", "parameters": [{"description": "The work pool name", "required": true, "schema": {"type": "string", "title": "Work Pool Name", "description": "The work pool name"}, "name": "work_pool_name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_workers_work_pools__work_pool_name__workers_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkerResponse"}, "type": "array", "title": "Response Read Workers Work Pools  Work Pool Name  Workers Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_queues/": {"post": {"tags": ["Work Queues"], "summary": "Create Work Queue", "description": "Creates a new work queue.\n\nIf a work queue with the same name already exists, an error\nwill be raised.", "operationId": "create_work_queue_work_queues__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_queues/{id}": {"get": {"tags": ["Work Queues"], "summary": "Read Work Queue", "description": "Get a work queue by id.", "operationId": "read_work_queue_work_queues__id__get", "parameters": [{"description": "The work queue id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The work queue id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Work Queues"], "summary": "Delete Work Queue", "description": "Delete a work queue by id.", "operationId": "delete_work_queue_work_queues__id__delete", "parameters": [{"description": "The work queue id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The work queue id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Work Queues"], "summary": "Update Work Queue", "description": "Updates an existing work queue.", "operationId": "update_work_queue_work_queues__id__patch", "parameters": [{"description": "The work queue id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The work queue id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_queues/name/{name}": {"get": {"tags": ["Work Queues"], "summary": "Read Work Queue By Name", "description": "Get a work queue by id.", "operationId": "read_work_queue_by_name_work_queues_name__name__get", "parameters": [{"description": "The work queue name", "required": true, "schema": {"type": "string", "title": "Name", "description": "The work queue name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_queues/{id}/get_runs": {"post": {"tags": ["Work Queues"], "summary": "Read Work Queue Runs", "description": "Get flow runs from the work queue.", "operationId": "read_work_queue_runs_work_queues__id__get_runs_post", "parameters": [{"description": "The work queue id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The work queue id"}, "name": "id", "in": "path"}, {"description": "A header to indicate this request came from the Prefect UI.", "required": false, "schema": {"type": "boolean", "title": "X-Prefect-Ui", "description": "A header to indicate this request came from the Prefect UI.", "default": false}, "name": "x-prefect-ui", "in": "header"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_work_queue_runs_work_queues__id__get_runs_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FlowRunResponse"}, "type": "array", "title": "Response Read Work Queue Runs Work Queues  Id  Get Runs Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_queues/filter": {"post": {"tags": ["Work Queues"], "summary": "Read Work Queues", "description": "Query for work queues.", "operationId": "read_work_queues_work_queues_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_work_queues_work_queues_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkQueueResponse"}, "type": "array", "title": "Response Read Work Queues Work Queues Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/work_queues/{id}/status": {"get": {"tags": ["Work Queues"], "summary": "Read Work Queue Status", "description": "Get the status of a work queue.", "operationId": "read_work_queue_status_work_queues__id__status_get", "parameters": [{"description": "The work queue id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The work queue id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkQueueStatusDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/": {"post": {"tags": ["Artifacts"], "summary": "Create Artifact", "operationId": "create_artifact_artifacts__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Artifact"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/{id}": {"get": {"tags": ["Artifacts"], "summary": "Read Artifact", "description": "Retrieve an artifact from the database.", "operationId": "read_artifact_artifacts__id__get", "parameters": [{"description": "The ID of the artifact to retrieve.", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The ID of the artifact to retrieve."}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Artifact"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Artifacts"], "summary": "Delete Artifact", "description": "Delete an artifact from the database.", "operationId": "delete_artifact_artifacts__id__delete", "parameters": [{"description": "The ID of the artifact to delete.", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The ID of the artifact to delete."}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Artifacts"], "summary": "Update Artifact", "description": "Update an artifact in the database.", "operationId": "update_artifact_artifacts__id__patch", "parameters": [{"description": "The ID of the artifact to update.", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The ID of the artifact to update."}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/{key}/latest": {"get": {"tags": ["Artifacts"], "summary": "Read Latest Artifact", "description": "Retrieve the latest artifact from the artifact table.", "operationId": "read_latest_artifact_artifacts__key__latest_get", "parameters": [{"description": "The key of the artifact to retrieve.", "required": true, "schema": {"type": "string", "title": "Key", "description": "The key of the artifact to retrieve."}, "name": "key", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Artifact"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/filter": {"post": {"tags": ["Artifacts"], "summary": "Read Artifacts", "description": "Retrieve artifacts from the database.", "operationId": "read_artifacts_artifacts_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_artifacts_artifacts_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Artifact"}, "type": "array", "title": "Response Read Artifacts Artifacts Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/latest/filter": {"post": {"tags": ["Artifacts"], "summary": "Read Latest Artifacts", "description": "Retrieve artifacts from the database.", "operationId": "read_latest_artifacts_artifacts_latest_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_latest_artifacts_artifacts_latest_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ArtifactCollection"}, "type": "array", "title": "Response Read Latest Artifacts Artifacts Latest Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/count": {"post": {"tags": ["Artifacts"], "summary": "Count Artifacts", "description": "Count artifacts from the database.", "operationId": "count_artifacts_artifacts_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_artifacts_artifacts_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Artifacts Artifacts Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/artifacts/latest/count": {"post": {"tags": ["Artifacts"], "summary": "Count Latest Artifacts", "description": "Count artifacts from the database.", "operationId": "count_latest_artifacts_artifacts_latest_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_latest_artifacts_artifacts_latest_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Latest Artifacts Artifacts Latest Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_schemas/": {"post": {"tags": ["Block schemas"], "summary": "Create Block Schema", "operationId": "create_block_schema_block_schemas__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockSchemaCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_schemas/{id}": {"get": {"tags": ["Block schemas"], "summary": "Read Block Schema By Id", "description": "Get a block schema by id.", "operationId": "read_block_schema_by_id_block_schemas__id__get", "parameters": [{"description": "The block schema id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block schema id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Block schemas"], "summary": "Delete Block Schema", "description": "Delete a block schema by id.", "operationId": "delete_block_schema_block_schemas__id__delete", "parameters": [{"description": "The block schema id", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id", "description": "The block schema id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_schemas/filter": {"post": {"tags": ["Block schemas"], "summary": "Read Block Schemas", "description": "Read all block schemas, optionally filtered by type", "operationId": "read_block_schemas_block_schemas_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_block_schemas_block_schemas_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/BlockSchema"}, "type": "array", "title": "Response Read Block Schemas Block Schemas Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_schemas/checksum/{checksum}": {"get": {"tags": ["Block schemas"], "summary": "Read Block Schema By Checksum", "operationId": "read_block_schema_by_checksum_block_schemas_checksum__checksum__get", "parameters": [{"description": "The block schema checksum", "required": true, "schema": {"type": "string", "title": "Checksum", "description": "The block schema checksum"}, "name": "checksum", "in": "path"}, {"description": "Version of block schema. If not provided the most recently created block schema with the matching checksum will be returned.", "required": false, "schema": {"type": "string", "title": "Version", "description": "Version of block schema. If not provided the most recently created block schema with the matching checksum will be returned."}, "name": "version", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BlockSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/block_capabilities/": {"get": {"tags": ["Block capabilities"], "summary": "Read Available Block Capabilities", "operationId": "read_available_block_capabilities_block_capabilities__get", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array", "title": "Response Read Available Block Capabilities Block Capabilities  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/collections/views/{view}": {"get": {"tags": ["Collections"], "summary": "Read View Content", "description": "Reads the content of a view from the prefect-collection-registry.", "operationId": "read_view_content_collections_views__view__get", "parameters": [{"required": true, "schema": {"type": "string", "title": "View"}, "name": "view", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Response Read View Content Collections Views  View  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/variables/": {"post": {"tags": ["Variables"], "summary": "Create Variable", "operationId": "create_variable_variables__post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VariableCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Variable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/variables/{id}": {"get": {"tags": ["Variables"], "summary": "Read Variable", "operationId": "read_variable_variables__id__get", "parameters": [{"required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Variable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Variables"], "summary": "Delete Variable", "operationId": "delete_variable_variables__id__delete", "parameters": [{"required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Variables"], "summary": "Update Variable", "operationId": "update_variable_variables__id__patch", "parameters": [{"required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}, "name": "id", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VariableUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/variables/name/{name}": {"get": {"tags": ["Variables"], "summary": "Read Variable By Name", "operationId": "read_variable_by_name_variables_name__name__get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Variable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Variables"], "summary": "Delete Variable By Name", "operationId": "delete_variable_by_name_variables_name__name__delete", "parameters": [{"required": true, "schema": {"type": "string", "title": "Name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Variables"], "summary": "Update Variable By Name", "operationId": "update_variable_by_name_variables_name__name__patch", "parameters": [{"required": true, "schema": {"type": "string", "title": "Name"}, "name": "name", "in": "path"}, {"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VariableUpdate"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/variables/filter": {"post": {"tags": ["Variables"], "summary": "Read Variables", "operationId": "read_variables_variables_filter_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_variables_variables_filter_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Variable"}, "type": "array", "title": "Response Read Variables Variables Filter Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/variables/count": {"post": {"tags": ["Variables"], "summary": "Count Variables", "operationId": "count_variables_variables_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_count_variables_variables_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Count Variables Variables Count Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/ui/flow_runs/history": {"post": {"tags": ["Flow Runs", "UI"], "summary": "Read Flow Run History", "operationId": "read_flow_run_history_ui_flow_runs_history_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_flow_run_history_ui_flow_runs_history_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleFlowRun"}, "type": "array", "title": "Response Read Flow Run History Ui Flow Runs History Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/ui/schemas/validate": {"post": {"tags": ["UI", "Schemas"], "summary": "Validate Obj", "operationId": "validate_obj_ui_schemas_validate_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_validate_obj_ui_schemas_validate_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/ui/task_runs/dashboard/counts": {"post": {"tags": ["Task Runs", "UI"], "summary": "Read Dashboard Task Run Counts", "operationId": "read_dashboard_task_run_counts_ui_task_runs_dashboard_counts_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_dashboard_task_run_counts_ui_task_runs_dashboard_counts_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TaskRunCount"}, "type": "array", "title": "Response Read Dashboard Task Run Counts Ui Task Runs Dashboard Counts Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/ui/task_runs/count": {"post": {"tags": ["Task Runs", "UI"], "summary": "Read Task Run Counts By State", "operationId": "read_task_run_counts_by_state_ui_task_runs_count_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_read_task_run_counts_by_state_ui_task_runs_count_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CountByState"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/settings": {"get": {"tags": ["Admin"], "summary": "Read Settings", "description": "Get the current Prefect REST API settings.\n\nSecret setting values will be obfuscated.", "operationId": "read_settings_admin_settings_get", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Settings"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/version": {"get": {"tags": ["Admin"], "summary": "Read Version", "description": "Returns the Prefect version number", "operationId": "read_version_admin_version_get", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Read Version Admin Version Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/database/clear": {"post": {"tags": ["Admin"], "summary": "Clear Database", "description": "Clear all database tables without dropping them.", "operationId": "clear_database_admin_database_clear_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_clear_database_admin_database_clear_post"}}}}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/database/drop": {"post": {"tags": ["Admin"], "summary": "Drop Database", "description": "Drop all database objects.", "operationId": "drop_database_admin_database_drop_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_drop_database_admin_database_drop_post"}}}}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/database/create": {"post": {"tags": ["Admin"], "summary": "Create Database", "description": "Create all database objects.", "operationId": "create_database_admin_database_create_post", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_create_database_admin_database_create_post"}}}}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/hello": {"get": {"tags": ["Root"], "summary": "Hello", "description": "Say hello!", "operationId": "hello_hello_get", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/ready": {"get": {"tags": ["Root"], "summary": "Perform Readiness Check", "operationId": "perform_readiness_check_ready_get", "parameters": [{"required": false, "schema": {"type": "string", "title": "X-Prefect-Api-Version"}, "name": "x-prefect-api-version", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Artifact": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "key": {"type": "string", "title": "Key", "description": "An optional unique reference key for this artifact."}, "type": {"type": "string", "title": "Type", "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"}, "description": {"type": "string", "title": "Description", "description": "A markdown-enabled description of the artifact."}, "data": {"anyOf": [{"type": "object"}, {}], "title": "Data", "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type."}, "metadata_": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Metadata ", "description": "User-defined artifact metadata. Content must be string key and value pairs."}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run associated with the artifact."}, "task_run_id": {"type": "string", "format": "uuid", "title": "Task Run Id", "description": "The task run associated with the artifact."}}, "type": "object", "title": "Artifact", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "ArtifactCollection": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "key": {"type": "string", "title": "Key", "description": "An optional unique reference key for this artifact."}, "latest_id": {"type": "string", "format": "uuid", "title": "Latest Id", "description": "The latest artifact ID associated with the key."}, "type": {"type": "string", "title": "Type", "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"}, "description": {"type": "string", "title": "Description", "description": "A markdown-enabled description of the artifact."}, "data": {"anyOf": [{"type": "object"}, {}], "title": "Data", "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type."}, "metadata_": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Metadata ", "description": "User-defined artifact metadata. Content must be string key and value pairs."}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run associated with the artifact."}, "task_run_id": {"type": "string", "format": "uuid", "title": "Task Run Id", "description": "The task run associated with the artifact."}}, "type": "object", "required": ["key", "latest_id"], "title": "ArtifactCollection", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "ArtifactCollectionFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "latest_id": {"allOf": [{"$ref": "#/components/schemas/ArtifactCollectionFilterLatestId"}], "title": "Latest Id", "description": "Filter criteria for `Artifact.id`"}, "key": {"allOf": [{"$ref": "#/components/schemas/ArtifactCollectionFilterKey"}], "title": "Key", "description": "Filter criteria for `Artifact.key`"}, "flow_run_id": {"allOf": [{"$ref": "#/components/schemas/ArtifactCollectionFilterFlowRunId"}], "title": "Flow Run Id", "description": "Filter criteria for `Artifact.flow_run_id`"}, "task_run_id": {"allOf": [{"$ref": "#/components/schemas/ArtifactCollectionFilterTaskRunId"}], "title": "Task Run Id", "description": "Filter criteria for `Artifact.task_run_id`"}, "type": {"allOf": [{"$ref": "#/components/schemas/ArtifactCollectionFilterType"}], "title": "Type", "description": "Filter criteria for `Artifact.type`"}}, "additionalProperties": false, "type": "object", "title": "ArtifactCollectionFilter", "description": "Filter artifact collections. Only artifact collections matching all criteria will be returned"}, "ArtifactCollectionFilterFlowRunId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow run IDs to include"}}, "additionalProperties": false, "type": "object", "title": "ArtifactCollectionFilterFlowRunId", "description": "Filter by `ArtifactCollection.flow_run_id`."}, "ArtifactCollectionFilterKey": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of artifact keys to include"}, "like_": {"type": "string", "title": "Like ", "description": "A string to match artifact keys against. This can include SQL wildcard characters like `%` and `_`.", "example": "my-artifact-%"}, "exists_": {"type": "boolean", "title": "Exists ", "description": "If `true`, only include artifacts with a non-null key. If `false`, only include artifacts with a null key. Should return all rows in the ArtifactCollection table if specified."}}, "additionalProperties": false, "type": "object", "title": "ArtifactCollectionFilterKey", "description": "Filter by `ArtifactCollection.key`."}, "ArtifactCollectionFilterLatestId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of artifact ids to include"}}, "additionalProperties": false, "type": "object", "title": "ArtifactCollectionFilterLatestId", "description": "Filter by `ArtifactCollection.latest_id`."}, "ArtifactCollectionFilterTaskRunId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of task run IDs to include"}}, "additionalProperties": false, "type": "object", "title": "ArtifactCollectionFilterTaskRunId", "description": "Filter by `ArtifactCollection.task_run_id`."}, "ArtifactCollectionFilterType": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of artifact types to include"}, "not_any_": {"items": {"type": "string"}, "type": "array", "title": "Not Any ", "description": "A list of artifact types to exclude"}}, "additionalProperties": false, "type": "object", "title": "ArtifactCollectionFilterType", "description": "Filter by `ArtifactCollection.type`."}, "ArtifactCollectionSort": {"type": "string", "enum": ["CREATED_DESC", "UPDATED_DESC", "ID_DESC", "KEY_DESC", "KEY_ASC"], "title": "ArtifactCollectionSort", "description": "Defines artifact collection sorting options."}, "ArtifactCreate": {"properties": {"key": {"type": "string", "title": "Key", "description": "An optional unique reference key for this artifact."}, "type": {"type": "string", "title": "Type", "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"}, "description": {"type": "string", "title": "Description", "description": "A markdown-enabled description of the artifact."}, "data": {"anyOf": [{"type": "object"}, {}], "title": "Data", "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type."}, "metadata_": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Metadata ", "description": "User-defined artifact metadata. Content must be string key and value pairs."}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run associated with the artifact."}, "task_run_id": {"type": "string", "format": "uuid", "title": "Task Run Id", "description": "The task run associated with the artifact."}}, "additionalProperties": false, "type": "object", "title": "ArtifactCreate", "description": "Data used by the Prefect REST API to create an artifact."}, "ArtifactFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/ArtifactFilterId"}], "title": "Id", "description": "Filter criteria for `Artifact.id`"}, "key": {"allOf": [{"$ref": "#/components/schemas/ArtifactFilterKey"}], "title": "Key", "description": "Filter criteria for `Artifact.key`"}, "flow_run_id": {"allOf": [{"$ref": "#/components/schemas/ArtifactFilterFlowRunId"}], "title": "Flow Run Id", "description": "Filter criteria for `Artifact.flow_run_id`"}, "task_run_id": {"allOf": [{"$ref": "#/components/schemas/ArtifactFilterTaskRunId"}], "title": "Task Run Id", "description": "Filter criteria for `Artifact.task_run_id`"}, "type": {"allOf": [{"$ref": "#/components/schemas/ArtifactFilterType"}], "title": "Type", "description": "Filter criteria for `Artifact.type`"}}, "additionalProperties": false, "type": "object", "title": "ArtifactFilter", "description": "Filter artifacts. Only artifacts matching all criteria will be returned"}, "ArtifactFilterFlowRunId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow run IDs to include"}}, "additionalProperties": false, "type": "object", "title": "ArtifactFilterFlowRunId", "description": "Filter by `Artifact.flow_run_id`."}, "ArtifactFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of artifact ids to include"}}, "additionalProperties": false, "type": "object", "title": "ArtifactFilterId", "description": "Filter by `Artifact.id`."}, "ArtifactFilterKey": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of artifact keys to include"}, "like_": {"type": "string", "title": "Like ", "description": "A string to match artifact keys against. This can include SQL wildcard characters like `%` and `_`.", "example": "my-artifact-%"}, "exists_": {"type": "boolean", "title": "Exists ", "description": "If `true`, only include artifacts with a non-null key. If `false`, only include artifacts with a null key."}}, "additionalProperties": false, "type": "object", "title": "ArtifactFilterKey", "description": "Filter by `Artifact.key`."}, "ArtifactFilterTaskRunId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of task run IDs to include"}}, "additionalProperties": false, "type": "object", "title": "ArtifactFilterTaskRunId", "description": "Filter by `Artifact.task_run_id`."}, "ArtifactFilterType": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of artifact types to include"}, "not_any_": {"items": {"type": "string"}, "type": "array", "title": "Not Any ", "description": "A list of artifact types to exclude"}}, "additionalProperties": false, "type": "object", "title": "ArtifactFilterType", "description": "Filter by `Artifact.type`."}, "ArtifactSort": {"type": "string", "enum": ["CREATED_DESC", "UPDATED_DESC", "ID_DESC", "KEY_DESC", "KEY_ASC"], "title": "ArtifactSort", "description": "Defines artifact sorting options."}, "ArtifactUpdate": {"properties": {"data": {"anyOf": [{"type": "object"}, {}], "title": "Data", "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type."}, "description": {"type": "string", "title": "Description", "description": "A markdown-enabled description of the artifact."}, "metadata_": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Metadata ", "description": "User-defined artifact metadata. Content must be string key and value pairs."}}, "additionalProperties": false, "type": "object", "title": "ArtifactUpdate", "description": "Data used by the Prefect REST API to update an artifact."}, "BlockDocument": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The block document's name. Not required for anonymous block documents."}, "data": {"type": "object", "title": "Data", "description": "The block document's data"}, "block_schema_id": {"type": "string", "format": "uuid", "title": "Block Schema Id", "description": "A block schema ID"}, "block_schema": {"allOf": [{"$ref": "#/components/schemas/BlockSchema"}], "title": "Block Schema", "description": "The associated block schema"}, "block_type_id": {"type": "string", "format": "uuid", "title": "Block Type Id", "description": "A block type ID"}, "block_type_name": {"type": "string", "title": "Block Type Name", "description": "The associated block type's name"}, "block_type": {"allOf": [{"$ref": "#/components/schemas/BlockType"}], "title": "Block Type", "description": "The associated block type"}, "block_document_references": {"additionalProperties": {"type": "object"}, "type": "object", "title": "Block Document References", "description": "Record of the block document's references"}, "is_anonymous": {"type": "boolean", "title": "Is Anonymous", "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)", "default": false}}, "type": "object", "required": ["block_schema_id", "block_type_id"], "title": "BlockDocument", "description": "An ORM representation of a block document."}, "BlockDocumentCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The block document's name. Not required for anonymous block documents."}, "data": {"type": "object", "title": "Data", "description": "The block document's data"}, "block_schema_id": {"type": "string", "format": "uuid", "title": "Block Schema Id", "description": "A block schema ID"}, "block_type_id": {"type": "string", "format": "uuid", "title": "Block Type Id", "description": "A block type ID"}, "is_anonymous": {"type": "boolean", "title": "Is Anonymous", "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)", "default": false}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentCreate", "description": "Data used by the Prefect REST API to create a block document."}, "BlockDocumentFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/BlockDocumentFilterId"}], "title": "Id", "description": "Filter criteria for `BlockDocument.id`"}, "is_anonymous": {"allOf": [{"$ref": "#/components/schemas/BlockDocumentFilterIsAnonymous"}], "title": "Is Anonymous", "description": "Filter criteria for `BlockDocument.is_anonymous`. Defaults to excluding anonymous blocks.", "default": {"eq_": false}}, "block_type_id": {"allOf": [{"$ref": "#/components/schemas/BlockDocumentFilterBlockTypeId"}], "title": "Block Type Id", "description": "Filter criteria for `BlockDocument.block_type_id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/BlockDocumentFilterName"}], "title": "Name", "description": "Filter criteria for `BlockDocument.name`"}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentFilter", "description": "Filter BlockDocuments. Only BlockDocuments matching all criteria will be returned"}, "BlockDocumentFilterBlockTypeId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of block type ids to include"}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentFilterBlockTypeId", "description": "Filter by `BlockDocument.block_type_id`."}, "BlockDocumentFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of block ids to include"}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentFilterId", "description": "Filter by `BlockDocument.id`."}, "BlockDocumentFilterIsAnonymous": {"properties": {"eq_": {"type": "boolean", "title": "Eq ", "description": "Filter block documents for only those that are or are not anonymous."}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentFilterIsAnonymous", "description": "Filter by `BlockDocument.is_anonymous`."}, "BlockDocumentFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of block names to include"}, "like_": {"type": "string", "title": "Like ", "description": "A string to match block names against. This can include SQL wildcard characters like `%` and `_`.", "example": "my-block%"}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentFilterName", "description": "Filter by `BlockDocument.name`."}, "BlockDocumentSort": {"type": "string", "enum": ["NAME_DESC", "NAME_ASC", "BLOCK_TYPE_AND_NAME_ASC"], "title": "BlockDocumentSort", "description": "Defines block document sorting options."}, "BlockDocumentUpdate": {"properties": {"block_schema_id": {"type": "string", "format": "uuid", "title": "Block Schema Id", "description": "A block schema ID"}, "data": {"type": "object", "title": "Data", "description": "The block document's data"}, "merge_existing_data": {"type": "boolean", "title": "Merge Existing Data", "default": true}}, "additionalProperties": false, "type": "object", "title": "BlockDocumentUpdate", "description": "Data used by the Prefect REST API to update a block document."}, "BlockSchema": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "checksum": {"type": "string", "title": "Checksum", "description": "The block schema's unique checksum"}, "fields": {"type": "object", "title": "Fields", "description": "The block schema's field schema"}, "block_type_id": {"type": "string", "format": "uuid", "title": "Block Type Id", "description": "A block type ID"}, "block_type": {"allOf": [{"$ref": "#/components/schemas/BlockType"}], "title": "Block Type", "description": "The associated block type"}, "capabilities": {"items": {"type": "string"}, "type": "array", "title": "Capabilities", "description": "A list of Block capabilities"}, "version": {"type": "string", "title": "Version", "description": "Human readable identifier for the block schema", "default": "non-versioned"}}, "type": "object", "required": ["checksum", "block_type_id"], "title": "BlockSchema", "description": "An ORM representation of a block schema."}, "BlockSchemaCreate": {"properties": {"fields": {"type": "object", "title": "Fields", "description": "The block schema's field schema"}, "block_type_id": {"type": "string", "format": "uuid", "title": "Block Type Id", "description": "A block type ID"}, "capabilities": {"items": {"type": "string"}, "type": "array", "title": "Capabilities", "description": "A list of Block capabilities"}, "version": {"type": "string", "title": "Version", "description": "Human readable identifier for the block schema", "default": "non-versioned"}}, "additionalProperties": false, "type": "object", "title": "BlockSchemaCreate", "description": "Data used by the Prefect REST API to create a block schema."}, "BlockSchemaFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "block_type_id": {"allOf": [{"$ref": "#/components/schemas/BlockSchemaFilterBlockTypeId"}], "title": "Block Type Id", "description": "Filter criteria for `BlockSchema.block_type_id`"}, "block_capabilities": {"allOf": [{"$ref": "#/components/schemas/BlockSchemaFilterCapabilities"}], "title": "Block Capabilities", "description": "Filter criteria for `BlockSchema.capabilities`"}, "id": {"allOf": [{"$ref": "#/components/schemas/BlockSchemaFilterId"}], "title": "Id", "description": "Filter criteria for `BlockSchema.id`"}, "version": {"allOf": [{"$ref": "#/components/schemas/BlockSchemaFilterVersion"}], "title": "Version", "description": "Filter criteria for `BlockSchema.version`"}}, "additionalProperties": false, "type": "object", "title": "BlockSchemaFilter", "description": "Filter BlockSchemas"}, "BlockSchemaFilterBlockTypeId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of block type ids to include"}}, "additionalProperties": false, "type": "object", "title": "BlockSchemaFilterBlockTypeId", "description": "Filter by `BlockSchema.block_type_id`."}, "BlockSchemaFilterCapabilities": {"properties": {"all_": {"items": {"type": "string"}, "type": "array", "title": "All ", "description": "A list of block capabilities. Block entities will be returned only if an associated block schema has a superset of the defined capabilities.", "example": ["write-storage", "read-storage"]}}, "additionalProperties": false, "type": "object", "title": "BlockSchemaFilterCapabilities", "description": "Filter by `BlockSchema.capabilities`"}, "BlockSchemaFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of IDs to include"}}, "additionalProperties": false, "type": "object", "title": "BlockSchemaFilterId", "description": "Filter by BlockSchema.id"}, "BlockSchemaFilterVersion": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of block schema versions.", "example": ["2.0.0", "2.1.0"]}}, "additionalProperties": false, "type": "object", "title": "BlockSchemaFilterVersion", "description": "Filter by `BlockSchema.capabilities`"}, "BlockType": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "A block type's name"}, "slug": {"type": "string", "title": "Slug", "description": "A block type's slug"}, "logo_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Logo Url", "description": "Web URL for the block type's logo"}, "documentation_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Documentation Url", "description": "Web URL for the block type's documentation"}, "description": {"type": "string", "title": "Description", "description": "A short blurb about the corresponding block's intended use"}, "code_example": {"type": "string", "title": "Code Example", "description": "A code snippet demonstrating use of the corresponding block"}, "is_protected": {"type": "boolean", "title": "Is Protected", "description": "Protected block types cannot be modified via API.", "default": false}}, "type": "object", "required": ["name", "slug"], "title": "BlockType", "description": "An ORM representation of a block type"}, "BlockTypeCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "A block type's name"}, "slug": {"type": "string", "title": "Slug", "description": "A block type's slug"}, "logo_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Logo Url", "description": "Web URL for the block type's logo"}, "documentation_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Documentation Url", "description": "Web URL for the block type's documentation"}, "description": {"type": "string", "title": "Description", "description": "A short blurb about the corresponding block's intended use"}, "code_example": {"type": "string", "title": "Code Example", "description": "A code snippet demonstrating use of the corresponding block"}}, "additionalProperties": false, "type": "object", "title": "BlockTypeCreate", "description": "Data used by the Prefect REST API to create a block type."}, "BlockTypeFilter": {"properties": {"name": {"allOf": [{"$ref": "#/components/schemas/BlockTypeFilterName"}], "title": "Name", "description": "Filter criteria for `BlockType.name`"}, "slug": {"allOf": [{"$ref": "#/components/schemas/BlockTypeFilterSlug"}], "title": "Slug", "description": "Filter criteria for `BlockType.slug`"}}, "additionalProperties": false, "type": "object", "title": "BlockTypeFilter", "description": "Filter BlockTypes"}, "BlockTypeFilterName": {"properties": {"like_": {"type": "string", "title": "Like ", "description": "A case-insensitive partial match. For example,  passing 'marvin' will match 'marvin', 'sad-Marvin', and 'marvin-robot'.", "example": "marvin"}}, "additionalProperties": false, "type": "object", "title": "BlockTypeFilterName", "description": "Filter by `BlockType.name`"}, "BlockTypeFilterSlug": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of slugs to match"}}, "additionalProperties": false, "type": "object", "title": "BlockTypeFilterSlug", "description": "Filter by `BlockType.slug`"}, "BlockTypeUpdate": {"properties": {"logo_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Logo Url", "description": "Web URL for the block type's logo"}, "documentation_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Documentation Url", "description": "Web URL for the block type's documentation"}, "description": {"type": "string", "title": "Description", "description": "A short blurb about the corresponding block's intended use"}, "code_example": {"type": "string", "title": "Code Example", "description": "A code snippet demonstrating use of the corresponding block"}}, "additionalProperties": false, "type": "object", "title": "BlockTypeUpdate", "description": "Data used by the Prefect REST API to update a block type."}, "Body_average_flow_run_lateness_flow_runs_lateness_post": {"properties": {"flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_pool_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}}, "type": "object", "title": "Body_average_flow_run_lateness_flow_runs_lateness_post"}, "Body_bulk_decrement_active_slots_v2_concurrency_limits_decrement_post": {"properties": {"slots": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Slots"}, "names": {"items": {"type": "string"}, "type": "array", "minItems": 1, "title": "Names"}, "occupancy_seconds": {"type": "number", "exclusiveMinimum": 0.0, "title": "Occupancy Seconds"}}, "type": "object", "required": ["slots", "names"], "title": "Body_bulk_decrement_active_slots_v2_concurrency_limits_decrement_post"}, "Body_bulk_increment_active_slots_v2_concurrency_limits_increment_post": {"properties": {"slots": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Slots"}, "names": {"items": {"type": "string"}, "type": "array", "minItems": 1, "title": "Names"}, "mode": {"type": "string", "enum": ["concurrency", "rate_limit"], "title": "Mode", "default": "concurrency"}}, "type": "object", "required": ["slots", "names"], "title": "Body_bulk_increment_active_slots_v2_concurrency_limits_increment_post"}, "Body_clear_database_admin_database_clear_post": {"properties": {"confirm": {"type": "boolean", "title": "Confirm", "description": "Pass confirm=True to confirm you want to modify the database.", "default": false}}, "type": "object", "title": "Body_clear_database_admin_database_clear_post"}, "Body_count_artifacts_artifacts_count_post": {"properties": {"artifacts": {"$ref": "#/components/schemas/ArtifactFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}}, "type": "object", "title": "Body_count_artifacts_artifacts_count_post"}, "Body_count_block_documents_block_documents_count_post": {"properties": {"block_documents": {"$ref": "#/components/schemas/BlockDocumentFilter"}, "block_types": {"$ref": "#/components/schemas/BlockTypeFilter"}, "block_schemas": {"$ref": "#/components/schemas/BlockSchemaFilter"}}, "type": "object", "title": "Body_count_block_documents_block_documents_count_post"}, "Body_count_deployments_deployments_count_post": {"properties": {"flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_pool_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}}, "type": "object", "title": "Body_count_deployments_deployments_count_post"}, "Body_count_flow_runs_flow_runs_count_post": {"properties": {"flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_pool_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}}, "type": "object", "title": "Body_count_flow_runs_flow_runs_count_post"}, "Body_count_flows_flows_count_post": {"properties": {"flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}}, "type": "object", "title": "Body_count_flows_flows_count_post"}, "Body_count_latest_artifacts_artifacts_latest_count_post": {"properties": {"artifacts": {"$ref": "#/components/schemas/ArtifactCollectionFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}}, "type": "object", "title": "Body_count_latest_artifacts_artifacts_latest_count_post"}, "Body_count_task_runs_task_runs_count_post": {"properties": {"flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}}, "type": "object", "title": "Body_count_task_runs_task_runs_count_post"}, "Body_count_variables_variables_count_post": {"properties": {"variables": {"$ref": "#/components/schemas/VariableFilter"}}, "type": "object", "title": "Body_count_variables_variables_count_post"}, "Body_count_work_pools_work_pools_count_post": {"properties": {"work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}}, "type": "object", "title": "Body_count_work_pools_work_pools_count_post"}, "Body_create_database_admin_database_create_post": {"properties": {"confirm": {"type": "boolean", "title": "Confirm", "description": "Pass confirm=True to confirm you want to modify the database.", "default": false}}, "type": "object", "title": "Body_create_database_admin_database_create_post"}, "Body_create_flow_run_input_flow_runs__id__input_post": {"properties": {"key": {"type": "string", "title": "Key", "description": "The input key"}, "value": {"type": "string", "format": "binary", "title": "Value", "description": "The value of the input"}, "sender": {"type": "string", "title": "Sender", "description": "The sender of the input"}}, "type": "object", "required": ["key", "value"], "title": "Body_create_flow_run_input_flow_runs__id__input_post"}, "Body_drop_database_admin_database_drop_post": {"properties": {"confirm": {"type": "boolean", "title": "Confirm", "description": "Pass confirm=True to confirm you want to modify the database.", "default": false}}, "type": "object", "title": "Body_drop_database_admin_database_drop_post"}, "Body_filter_flow_run_input_flow_runs__id__input_filter_post": {"properties": {"prefix": {"type": "string", "title": "Prefix", "description": "The input key prefix"}, "limit": {"type": "integer", "title": "Limit", "description": "The maximum number of results to return", "default": 1}, "exclude_keys": {"items": {"type": "string"}, "type": "array", "title": "Exclude Keys", "description": "Exclude inputs with these keys", "default": []}}, "type": "object", "required": ["prefix"], "title": "Body_filter_flow_run_input_flow_runs__id__input_filter_post"}, "Body_flow_run_history_flow_runs_history_post": {"properties": {"history_start": {"type": "string", "format": "date-time", "title": "History Start", "description": "The history's start time."}, "history_end": {"type": "string", "format": "date-time", "title": "History End", "description": "The history's end time."}, "history_interval_seconds": {"type": "number", "format": "time-delta", "title": "History Interval Seconds", "description": "The size of each history interval, in seconds. Must be at least 1 second."}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}}, "type": "object", "required": ["history_start", "history_end", "history_interval_seconds"], "title": "Body_flow_run_history_flow_runs_history_post"}, "Body_get_scheduled_flow_runs_for_deployments_deployments_get_scheduled_flow_runs_post": {"properties": {"deployment_ids": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Deployment Ids", "description": "The deployment IDs to get scheduled runs for"}, "scheduled_before": {"type": "string", "format": "date-time", "title": "Scheduled Before", "description": "The maximum time to look for scheduled flow runs"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "required": ["deployment_ids"], "title": "Body_get_scheduled_flow_runs_for_deployments_deployments_get_scheduled_flow_runs_post"}, "Body_get_scheduled_flow_runs_work_pools__name__get_scheduled_flow_runs_post": {"properties": {"work_queue_names": {"items": {"type": "string"}, "type": "array", "title": "Work Queue Names", "description": "The names of work pool queues"}, "scheduled_before": {"type": "string", "format": "date-time", "title": "Scheduled Before", "description": "The maximum time to look for scheduled flow runs"}, "scheduled_after": {"type": "string", "format": "date-time", "title": "Scheduled After", "description": "The minimum time to look for scheduled flow runs"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_get_scheduled_flow_runs_work_pools__name__get_scheduled_flow_runs_post"}, "Body_read_all_concurrency_limits_v2_v2_concurrency_limits_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_all_concurrency_limits_v2_v2_concurrency_limits_filter_post"}, "Body_read_artifacts_artifacts_filter_post": {"properties": {"sort": {"allOf": [{"$ref": "#/components/schemas/ArtifactSort"}], "default": "ID_DESC"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "artifacts": {"$ref": "#/components/schemas/ArtifactFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_artifacts_artifacts_filter_post"}, "Body_read_block_documents_block_documents_filter_post": {"properties": {"block_documents": {"$ref": "#/components/schemas/BlockDocumentFilter"}, "block_types": {"$ref": "#/components/schemas/BlockTypeFilter"}, "block_schemas": {"$ref": "#/components/schemas/BlockSchemaFilter"}, "include_secrets": {"type": "boolean", "title": "Include Secrets", "description": "Whether to include sensitive values in the block document.", "default": false}, "sort": {"allOf": [{"$ref": "#/components/schemas/BlockDocumentSort"}], "default": "NAME_ASC"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_block_documents_block_documents_filter_post"}, "Body_read_block_schemas_block_schemas_filter_post": {"properties": {"block_schemas": {"$ref": "#/components/schemas/BlockSchemaFilter"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_block_schemas_block_schemas_filter_post"}, "Body_read_block_types_block_types_filter_post": {"properties": {"block_types": {"$ref": "#/components/schemas/BlockTypeFilter"}, "block_schemas": {"$ref": "#/components/schemas/BlockSchemaFilter"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_block_types_block_types_filter_post"}, "Body_read_concurrency_limits_concurrency_limits_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_concurrency_limits_concurrency_limits_filter_post"}, "Body_read_dashboard_task_run_counts_ui_task_runs_dashboard_counts_post": {"properties": {"task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}}, "type": "object", "required": ["task_runs"], "title": "Body_read_dashboard_task_run_counts_ui_task_runs_dashboard_counts_post"}, "Body_read_deployments_deployments_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_pool_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}, "sort": {"allOf": [{"$ref": "#/components/schemas/DeploymentSort"}], "default": "NAME_ASC"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_deployments_deployments_filter_post"}, "Body_read_flow_run_history_ui_flow_runs_history_post": {"properties": {"sort": {"allOf": [{"$ref": "#/components/schemas/FlowRunSort"}], "default": "EXPECTED_START_TIME_DESC"}, "limit": {"type": "integer", "maximum": 1000.0, "title": "Limit", "default": 1000}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}}, "type": "object", "title": "Body_read_flow_run_history_ui_flow_runs_history_post"}, "Body_read_flow_run_notification_policies_flow_run_notification_policies_filter_post": {"properties": {"flow_run_notification_policy_filter": {"$ref": "#/components/schemas/FlowRunNotificationPolicyFilter"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_flow_run_notification_policies_flow_run_notification_policies_filter_post"}, "Body_read_flow_runs_flow_runs_filter_post": {"properties": {"sort": {"allOf": [{"$ref": "#/components/schemas/FlowRunSort"}], "default": "ID_DESC"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "work_pool_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_flow_runs_flow_runs_filter_post"}, "Body_read_flows_flows_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "sort": {"allOf": [{"$ref": "#/components/schemas/FlowSort"}], "default": "NAME_ASC"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_flows_flows_filter_post"}, "Body_read_latest_artifacts_artifacts_latest_filter_post": {"properties": {"sort": {"allOf": [{"$ref": "#/components/schemas/ArtifactCollectionSort"}], "default": "ID_DESC"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "artifacts": {"$ref": "#/components/schemas/ArtifactCollectionFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_latest_artifacts_artifacts_latest_filter_post"}, "Body_read_logs_logs_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "logs": {"$ref": "#/components/schemas/LogFilter"}, "sort": {"allOf": [{"$ref": "#/components/schemas/LogSort"}], "default": "TIMESTAMP_ASC"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_logs_logs_filter_post"}, "Body_read_saved_searches_saved_searches_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_saved_searches_saved_searches_filter_post"}, "Body_read_task_run_counts_by_state_ui_task_runs_count_post": {"properties": {"flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}}, "type": "object", "title": "Body_read_task_run_counts_by_state_ui_task_runs_count_post"}, "Body_read_task_runs_task_runs_filter_post": {"properties": {"sort": {"allOf": [{"$ref": "#/components/schemas/TaskRunSort"}], "default": "ID_DESC"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_task_runs_task_runs_filter_post"}, "Body_read_variables_variables_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "variables": {"$ref": "#/components/schemas/VariableFilter"}, "sort": {"allOf": [{"$ref": "#/components/schemas/VariableSort"}], "default": "NAME_ASC"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_variables_variables_filter_post"}, "Body_read_work_pools_work_pools_filter_post": {"properties": {"work_pools": {"$ref": "#/components/schemas/WorkPoolFilter"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_work_pools_work_pools_filter_post"}, "Body_read_work_queue_runs_work_queues__id__get_runs_post": {"properties": {"scheduled_before": {"type": "string", "format": "date-time", "title": "Scheduled Before", "description": "Only flow runs scheduled to start before this time will be returned."}, "agent_id": {"type": "string", "format": "uuid", "title": "Agent Id", "description": "An optional unique identifier for the agent making this query. If provided, the Prefect REST API will track the last time this agent polled the work queue."}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_work_queue_runs_work_queues__id__get_runs_post"}, "Body_read_work_queues_work_pools__work_pool_name__queues_filter_post": {"properties": {"work_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_work_queues_work_pools__work_pool_name__queues_filter_post"}, "Body_read_work_queues_work_queues_filter_post": {"properties": {"offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "work_queues": {"$ref": "#/components/schemas/WorkQueueFilter"}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_work_queues_work_queues_filter_post"}, "Body_read_workers_work_pools__work_pool_name__workers_filter_post": {"properties": {"workers": {"$ref": "#/components/schemas/WorkerFilter"}, "offset": {"type": "integer", "minimum": 0.0, "title": "Offset", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "Defaults to PREFECT_API_DEFAULT_LIMIT if not provided."}}, "type": "object", "title": "Body_read_workers_work_pools__work_pool_name__workers_filter_post"}, "Body_reset_concurrency_limit_by_tag_concurrency_limits_tag__tag__reset_post": {"properties": {"slot_override": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Slot Override", "description": "Manual override for active concurrency limit slots."}}, "type": "object", "title": "Body_reset_concurrency_limit_by_tag_concurrency_limits_tag__tag__reset_post"}, "Body_resume_flow_run_flow_runs__id__resume_post": {"properties": {"run_input": {"type": "object", "title": "Run Input"}}, "type": "object", "title": "Body_resume_flow_run_flow_runs__id__resume_post"}, "Body_schedule_deployment_deployments__id__schedule_post": {"properties": {"start_time": {"type": "string", "format": "date-time", "title": "Start Time", "description": "The earliest date to schedule"}, "end_time": {"type": "string", "format": "date-time", "title": "End Time", "description": "The latest date to schedule"}, "min_time": {"type": "number", "format": "time-delta", "title": "Min Time", "description": "Runs will be scheduled until at least this long after the `start_time`"}, "min_runs": {"type": "integer", "title": "Min Runs", "description": "The minimum number of runs to schedule"}, "max_runs": {"type": "integer", "title": "Max Runs", "description": "The maximum number of runs to schedule"}}, "type": "object", "title": "Body_schedule_deployment_deployments__id__schedule_post"}, "Body_set_flow_run_state_flow_runs__id__set_state_post": {"properties": {"state": {"allOf": [{"$ref": "#/components/schemas/StateCreate"}], "title": "State", "description": "The intended state."}, "force": {"type": "boolean", "title": "Force", "description": "If false, orchestration rules will be applied that may alter or prevent the state transition. If True, orchestration rules are not applied.", "default": false}}, "type": "object", "required": ["state"], "title": "Body_set_flow_run_state_flow_runs__id__set_state_post"}, "Body_set_task_run_state_task_runs__id__set_state_post": {"properties": {"state": {"allOf": [{"$ref": "#/components/schemas/StateCreate"}], "title": "State", "description": "The intended state."}, "force": {"type": "boolean", "title": "Force", "description": "If false, orchestration rules will be applied that may alter or prevent the state transition. If True, orchestration rules are not applied.", "default": false}}, "type": "object", "required": ["state"], "title": "Body_set_task_run_state_task_runs__id__set_state_post"}, "Body_task_run_history_task_runs_history_post": {"properties": {"history_start": {"type": "string", "format": "date-time", "title": "History Start", "description": "The history's start time."}, "history_end": {"type": "string", "format": "date-time", "title": "History End", "description": "The history's end time."}, "history_interval_seconds": {"type": "number", "format": "time-delta", "title": "History Interval Seconds", "description": "The size of each history interval, in seconds. Must be at least 1 second."}, "flows": {"$ref": "#/components/schemas/FlowFilter"}, "flow_runs": {"$ref": "#/components/schemas/FlowRunFilter"}, "task_runs": {"$ref": "#/components/schemas/TaskRunFilter"}, "deployments": {"$ref": "#/components/schemas/DeploymentFilter"}}, "type": "object", "required": ["history_start", "history_end", "history_interval_seconds"], "title": "Body_task_run_history_task_runs_history_post"}, "Body_validate_obj_ui_schemas_validate_post": {"properties": {"schema": {"type": "object", "title": "Schema"}, "values": {"type": "object", "title": "Values"}}, "type": "object", "required": ["schema", "values"], "title": "Body_validate_obj_ui_schemas_validate_post"}, "Body_worker_heartbeat_work_pools__work_pool_name__workers_heartbeat_post": {"properties": {"name": {"type": "string", "title": "Name", "description": "The worker process name"}, "heartbeat_interval_seconds": {"type": "integer", "title": "Heartbeat Interval Seconds", "description": "The worker's heartbeat interval in seconds"}}, "type": "object", "required": ["name"], "title": "Body_worker_heartbeat_work_pools__work_pool_name__workers_heartbeat_post"}, "ConcurrencyLimit": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "tag": {"type": "string", "title": "Tag", "description": "A tag the concurrency limit is applied to."}, "concurrency_limit": {"type": "integer", "title": "Concurrency Limit", "description": "The concurrency limit."}, "active_slots": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Active Slots", "description": "A list of active run ids using a concurrency slot"}}, "type": "object", "required": ["tag", "concurrency_limit"], "title": "ConcurrencyLimit", "description": "An ORM representation of a concurrency limit."}, "ConcurrencyLimitCreate": {"properties": {"tag": {"type": "string", "title": "Tag", "description": "A tag the concurrency limit is applied to."}, "concurrency_limit": {"type": "integer", "title": "Concurrency Limit", "description": "The concurrency limit."}}, "additionalProperties": false, "type": "object", "title": "ConcurrencyLimitCreate", "description": "Data used by the Prefect REST API to create a concurrency limit."}, "ConcurrencyLimitV2": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "active": {"type": "boolean", "title": "Active", "description": "Whether the concurrency limit is active.", "default": true}, "name": {"type": "string", "title": "Name", "description": "The name of the concurrency limit."}, "limit": {"type": "integer", "title": "Limit", "description": "The concurrency limit."}, "active_slots": {"type": "integer", "title": "Active Slots", "description": "The number of active slots.", "default": 0}, "denied_slots": {"type": "integer", "title": "Denied Slots", "description": "The number of denied slots.", "default": 0}, "slot_decay_per_second": {"type": "number", "title": "Slot Decay Per Second", "description": "The decay rate for active slots when used as a rate limit.", "default": 0}, "avg_slot_occupancy_seconds": {"type": "number", "title": "Avg Slot Occupancy Seconds", "description": "The average amount of time a slot is occupied.", "default": 2.0}}, "type": "object", "required": ["name", "limit"], "title": "ConcurrencyLimitV2", "description": "An ORM representation of a v2 concurrency limit."}, "ConcurrencyLimitV2Create": {"properties": {"active": {"type": "boolean", "title": "Active", "description": "Whether the concurrency limit is active.", "default": true}, "name": {"type": "string", "title": "Name", "description": "The name of the concurrency limit."}, "limit": {"type": "integer", "title": "Limit", "description": "The concurrency limit."}, "active_slots": {"type": "integer", "title": "Active Slots", "description": "The number of active slots.", "default": 0}, "denied_slots": {"type": "integer", "title": "Denied Slots", "description": "The number of denied slots.", "default": 0}, "slot_decay_per_second": {"type": "number", "title": "Slot Decay Per Second", "description": "The decay rate for active slots when used as a rate limit.", "default": 0}}, "additionalProperties": false, "type": "object", "title": "ConcurrencyLimitV2Create", "description": "Data used by the Prefect REST API to create a v2 concurrency limit."}, "ConcurrencyLimitV2Update": {"properties": {"active": {"type": "boolean", "title": "Active", "description": "Whether the concurrency limit is active.", "default": true}, "name": {"type": "string", "title": "Name", "description": "The name of the concurrency limit."}, "limit": {"type": "integer", "title": "Limit", "description": "The concurrency limit."}, "active_slots": {"type": "integer", "title": "Active Slots", "description": "The number of active slots.", "default": 0}, "denied_slots": {"type": "integer", "title": "Denied Slots", "description": "The number of denied slots.", "default": 0}, "slot_decay_per_second": {"type": "number", "title": "Slot Decay Per Second", "description": "The decay rate for active slots when used as a rate limit.", "default": 0}}, "additionalProperties": false, "type": "object", "title": "ConcurrencyLimitV2Update", "description": "Data used by the Prefect REST API to update a v2 concurrency limit."}, "Constant": {"properties": {"input_type": {"type": "string", "enum": ["constant"], "title": "Input Type", "default": "constant"}, "type": {"type": "string", "title": "Type"}}, "type": "object", "required": ["type"], "title": "Constant", "description": "Represents constant input value to a task run."}, "CountByState": {"properties": {"COMPLETED": {"type": "integer", "title": "Completed", "default": 0}, "PENDING": {"type": "integer", "title": "Pending", "default": 0}, "RUNNING": {"type": "integer", "title": "Running", "default": 0}, "FAILED": {"type": "integer", "title": "Failed", "default": 0}, "CANCELLED": {"type": "integer", "title": "Cancelled", "default": 0}, "CRASHED": {"type": "integer", "title": "Crashed", "default": 0}, "PAUSED": {"type": "integer", "title": "Paused", "default": 0}, "CANCELLING": {"type": "integer", "title": "Cancelling", "default": 0}, "SCHEDULED": {"type": "integer", "title": "Scheduled", "default": 0}}, "type": "object", "title": "CountByState", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "CreatedBy": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id", "description": "The id of the creator of the object."}, "type": {"type": "string", "title": "Type", "description": "The type of the creator of the object."}, "display_value": {"type": "string", "title": "Display Value", "description": "The display value for the creator."}}, "type": "object", "title": "CreatedBy"}, "CronSchedule": {"properties": {"cron": {"type": "string", "title": "Cron", "example": "0 0 * * *"}, "timezone": {"type": "string", "title": "Timezone", "example": "America/New_York"}, "day_or": {"type": "boolean", "title": "Day Or", "description": "Control croniter behavior for handling day and day_of_week entries.", "default": true}}, "additionalProperties": false, "type": "object", "required": ["cron"], "title": "CronSchedule", "description": "Cron schedule\n\nNOTE: If the timezone is a DST-observing one, then the schedule will adjust\nitself appropriately. Cron's rules for DST are based on schedule times, not\nintervals. This means that an hourly cron schedule will fire on every new\nschedule hour, not every elapsed hour; for example, when clocks are set back\nthis will result in a two-hour pause as the schedule will fire *the first\ntime* 1am is reached and *the first time* 2am is reached, 120 minutes later.\nLonger schedules, such as one that fires at 9am every morning, will\nautomatically adjust for DST.\n\nArgs:\n    cron (str): a valid cron string\n    timezone (str): a valid timezone string in IANA tzdata format (for example,\n        America/New_York).\n    day_or (bool, optional): Control how croniter handles `day` and `day_of_week`\n        entries. Defaults to True, matching cron which connects those values using\n        OR. If the switch is set to False, the values are connected using AND. This\n        behaves like fcron and enables you to e.g. define a job that executes each\n        2nd friday of a month by setting the days of month and the weekday."}, "DependencyResult": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "upstream_dependencies": {"items": {"$ref": "#/components/schemas/TaskRunResult"}, "type": "array", "title": "Upstream Dependencies"}, "state": {"$ref": "#/components/schemas/State"}, "expected_start_time": {"type": "string", "format": "date-time", "title": "Expected Start Time"}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time"}, "end_time": {"type": "string", "format": "date-time", "title": "End Time"}, "total_run_time": {"type": "number", "format": "time-delta", "title": "Total Run Time"}, "estimated_run_time": {"type": "number", "format": "time-delta", "title": "Estimated Run Time"}, "untrackable_result": {"type": "boolean", "title": "Untrackable Result"}}, "type": "object", "required": ["id", "name", "upstream_dependencies", "state", "untrackable_result"], "title": "DependencyResult", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "DeploymentCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the deployment."}, "flow_id": {"type": "string", "format": "uuid", "title": "Flow Id", "description": "The flow id associated with the deployment."}, "is_schedule_active": {"type": "boolean", "title": "Is Schedule Active", "description": "Whether or not the deployment schedule is active.", "default": true}, "paused": {"type": "boolean", "title": "Paused", "description": "Whether or not the deployment is paused.", "default": false}, "schedules": {"items": {"$ref": "#/components/schemas/DeploymentScheduleCreate"}, "type": "array", "title": "Schedules", "description": "A list of schedules for the deployment."}, "enforce_parameter_schema": {"type": "boolean", "title": "Enforce Parameter Schema", "description": "Whether or not the deployment should enforce the parameter schema.", "default": false}, "parameter_openapi_schema": {"type": "object", "title": "Parameter Openapi Schema", "description": "The parameter schema of the flow, including defaults."}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for flow runs scheduled by the deployment."}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags for the deployment", "example": ["tag-1", "tag-2"]}, "pull_steps": {"items": {"type": "object"}, "type": "array", "title": "Pull Steps", "description": "Pull steps for cloning and running this deployment."}, "manifest_path": {"type": "string", "title": "Manifest Path", "description": "The path to the flow's manifest file, relative to the chosen storage."}, "work_queue_name": {"type": "string", "title": "Work Queue Name", "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."}, "work_pool_name": {"type": "string", "title": "Work Pool Name", "description": "The name of the deployment's work pool.", "example": "my-work-pool"}, "storage_document_id": {"type": "string", "format": "uuid", "title": "Storage Document Id", "description": "The block document defining storage used for this flow."}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use for flow runs."}, "schedule": {"anyOf": [{"$ref": "#/components/schemas/IntervalSchedule"}, {"$ref": "#/components/schemas/CronSchedule"}, {"$ref": "#/components/schemas/RRuleSchedule"}], "title": "Schedule", "description": "A schedule for the deployment."}, "description": {"type": "string", "title": "Description", "description": "A description for the deployment."}, "path": {"type": "string", "title": "Path", "description": "The path to the working directory for the workflow, relative to remote storage or an absolute path."}, "version": {"type": "string", "title": "Version", "description": "An optional version for the deployment."}, "entrypoint": {"type": "string", "title": "Entrypoint", "description": "The path to the entrypoint for the workflow, relative to the `path`."}, "infra_overrides": {"type": "object", "title": "Infra Overrides", "description": "Overrides to apply to the base infrastructure block at runtime."}}, "additionalProperties": false, "type": "object", "title": "DeploymentCreate", "description": "Data used by the Prefect REST API to create a deployment."}, "DeploymentFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/DeploymentFilterId"}], "title": "Id", "description": "Filter criteria for `Deployment.id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/DeploymentFilterName"}], "title": "Name", "description": "Filter criteria for `Deployment.name`"}, "paused": {"allOf": [{"$ref": "#/components/schemas/DeploymentFilterPaused"}], "title": "Paused", "description": "Filter criteria for `Deployment.paused`"}, "is_schedule_active": {"allOf": [{"$ref": "#/components/schemas/DeploymentFilterIsScheduleActive"}], "title": "Is Schedule Active", "description": "Filter criteria for `Deployment.is_schedule_active`"}, "tags": {"allOf": [{"$ref": "#/components/schemas/DeploymentFilterTags"}], "title": "Tags", "description": "Filter criteria for `Deployment.tags`"}, "work_queue_name": {"allOf": [{"$ref": "#/components/schemas/DeploymentFilterWorkQueueName"}], "title": "Work Queue Name", "description": "Filter criteria for `Deployment.work_queue_name`"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilter", "description": "Filter for deployments. Only deployments matching all criteria will be returned."}, "DeploymentFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of deployment ids to include"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilterId", "description": "Filter by `Deployment.id`."}, "DeploymentFilterIsScheduleActive": {"properties": {"eq_": {"type": "boolean", "title": "Eq ", "description": "Only returns where deployment schedule is/is not active"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilterIsScheduleActive", "description": "Legacy filter to filter by `Deployment.is_schedule_active` which\nis always the opposite of `Deployment.paused`."}, "DeploymentFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of deployment names to include", "example": ["my-deployment-1", "my-deployment-2"]}, "like_": {"type": "string", "title": "Like ", "description": "A case-insensitive partial match. For example,  passing 'marvin' will match 'marvin', 'sad-Marvin', and 'marvin-robot'.", "example": "marvin"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilterName", "description": "Filter by `Deployment.name`."}, "DeploymentFilterPaused": {"properties": {"eq_": {"type": "boolean", "title": "Eq ", "description": "Only returns where deployment is/is not paused"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilterPaused", "description": "Filter by `Deployment.paused`."}, "DeploymentFilterTags": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "all_": {"items": {"type": "string"}, "type": "array", "title": "All ", "description": "A list of tags. Deployments will be returned only if their tags are a superset of the list", "example": ["tag-1", "tag-2"]}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include deployments without tags"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilterTags", "description": "Filter by `Deployment.tags`."}, "DeploymentFilterWorkQueueName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of work queue names to include", "example": ["work_queue_1", "work_queue_2"]}}, "additionalProperties": false, "type": "object", "title": "DeploymentFilterWorkQueueName", "description": "Filter by `Deployment.work_queue_name`."}, "DeploymentFlowRunCreate": {"properties": {"state": {"allOf": [{"$ref": "#/components/schemas/StateCreate"}], "title": "State", "description": "The state of the flow run to create"}, "name": {"type": "string", "title": "Name", "description": "The name of the flow run. Defaults to a random slug if not specified.", "example": "my-flow-run"}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for the flow run."}, "context": {"type": "object", "title": "Context", "description": "Additional context for the flow run.", "example": {"my_var": "my_val"}}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use this flow run."}, "empirical_policy": {"$ref": "#/components/schemas/FlowRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags on the flow run", "example": ["tag-1", "tag-2"]}, "idempotency_key": {"type": "string", "title": "Idempotency Key", "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."}, "parent_task_run_id": {"type": "string", "format": "uuid", "title": "Parent Task Run Id", "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."}, "work_queue_name": {"type": "string", "title": "Work Queue Name", "description": "The work queue that handled this flow run."}, "job_variables": {"type": "object", "title": "Job Variables", "description": "Variables used as overrides in the base job template"}}, "additionalProperties": false, "type": "object", "title": "DeploymentFlowRunCreate", "description": "Data used by the Prefect REST API to create a flow run from a deployment."}, "DeploymentResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the deployment."}, "version": {"type": "string", "title": "Version", "description": "An optional version for the deployment."}, "description": {"type": "string", "title": "Description", "description": "A description for the deployment."}, "flow_id": {"type": "string", "format": "uuid", "title": "Flow Id", "description": "The flow id associated with the deployment."}, "schedule": {"anyOf": [{"$ref": "#/components/schemas/IntervalSchedule"}, {"$ref": "#/components/schemas/CronSchedule"}, {"$ref": "#/components/schemas/RRuleSchedule"}], "title": "Schedule", "description": "A schedule for the deployment."}, "is_schedule_active": {"type": "boolean", "title": "Is Schedule Active", "description": "Whether or not the deployment schedule is active.", "default": true}, "paused": {"type": "boolean", "title": "Paused", "description": "Whether or not the deployment is paused.", "default": false}, "schedules": {"items": {"$ref": "#/components/schemas/DeploymentSchedule"}, "type": "array", "title": "Schedules", "description": "A list of schedules for the deployment."}, "infra_overrides": {"type": "object", "title": "Infra Overrides", "description": "Overrides to apply to the base infrastructure block at runtime."}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for flow runs scheduled by the deployment."}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags for the deployment", "example": ["tag-1", "tag-2"]}, "work_queue_name": {"type": "string", "title": "Work Queue Name", "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."}, "last_polled": {"type": "string", "format": "date-time", "title": "Last Polled", "description": "The last time the deployment was polled for status updates."}, "parameter_openapi_schema": {"type": "object", "title": "Parameter Openapi Schema", "description": "The parameter schema of the flow, including defaults."}, "path": {"type": "string", "title": "Path", "description": "The path to the working directory for the workflow, relative to remote storage or an absolute path."}, "pull_steps": {"items": {"type": "object"}, "type": "array", "title": "Pull Steps", "description": "Pull steps for cloning and running this deployment."}, "entrypoint": {"type": "string", "title": "Entrypoint", "description": "The path to the entrypoint for the workflow, relative to the `path`."}, "manifest_path": {"type": "string", "title": "Manifest Path", "description": "The path to the flow's manifest file, relative to the chosen storage."}, "storage_document_id": {"type": "string", "format": "uuid", "title": "Storage Document Id", "description": "The block document defining storage used for this flow."}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use for flow runs."}, "created_by": {"allOf": [{"$ref": "#/components/schemas/CreatedBy"}], "title": "Created By", "description": "Optional information about the creator of this deployment."}, "updated_by": {"allOf": [{"$ref": "#/components/schemas/UpdatedBy"}], "title": "Updated By", "description": "Optional information about the updater of this deployment."}, "work_pool_name": {"type": "string", "title": "Work Pool Name", "description": "The name of the deployment's work pool."}, "status": {"allOf": [{"$ref": "#/components/schemas/DeploymentStatus"}], "description": "Whether the deployment is ready to run flows.", "default": "NOT_READY"}, "enforce_parameter_schema": {"type": "boolean", "title": "Enforce Parameter Schema", "description": "Whether or not the deployment should enforce the parameter schema.", "default": false}}, "type": "object", "title": "DeploymentResponse", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "DeploymentSchedule": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "deployment_id": {"type": "string", "format": "uuid", "title": "Deployment Id", "description": "The deployment id associated with this schedule."}, "schedule": {"anyOf": [{"$ref": "#/components/schemas/IntervalSchedule"}, {"$ref": "#/components/schemas/CronSchedule"}, {"$ref": "#/components/schemas/RRuleSchedule"}], "title": "Schedule", "description": "The schedule for the deployment."}, "active": {"type": "boolean", "title": "Active", "description": "Whether or not the schedule is active.", "default": true}}, "type": "object", "required": ["schedule"], "title": "DeploymentSchedule", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "DeploymentScheduleCreate": {"properties": {"active": {"type": "boolean", "title": "Active", "description": "Whether or not the schedule is active.", "default": true}, "schedule": {"anyOf": [{"$ref": "#/components/schemas/IntervalSchedule"}, {"$ref": "#/components/schemas/CronSchedule"}, {"$ref": "#/components/schemas/RRuleSchedule"}], "title": "Schedule", "description": "The schedule for the deployment."}}, "additionalProperties": false, "type": "object", "title": "DeploymentScheduleCreate", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "DeploymentScheduleUpdate": {"properties": {"active": {"type": "boolean", "title": "Active", "description": "Whether or not the schedule is active.", "default": true}, "schedule": {"anyOf": [{"$ref": "#/components/schemas/IntervalSchedule"}, {"$ref": "#/components/schemas/CronSchedule"}, {"$ref": "#/components/schemas/RRuleSchedule"}], "title": "Schedule", "description": "The schedule for the deployment."}}, "additionalProperties": false, "type": "object", "title": "DeploymentScheduleUpdate", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "DeploymentSort": {"type": "string", "enum": ["CREATED_DESC", "UPDATED_DESC", "NAME_ASC", "NAME_DESC"], "title": "DeploymentSort", "description": "Defines deployment sorting options."}, "DeploymentStatus": {"type": "string", "enum": ["READY", "NOT_READY"], "title": "DeploymentStatus", "description": "Enumeration of deployment statuses."}, "DeploymentUpdate": {"properties": {"version": {"type": "string", "title": "Version", "description": "An optional version for the deployment."}, "schedule": {"anyOf": [{"$ref": "#/components/schemas/IntervalSchedule"}, {"$ref": "#/components/schemas/CronSchedule"}, {"$ref": "#/components/schemas/RRuleSchedule"}], "title": "Schedule", "description": "A schedule for the deployment."}, "description": {"type": "string", "title": "Description", "description": "A description for the deployment."}, "is_schedule_active": {"type": "boolean", "title": "Is Schedule Active", "description": "Whether or not the deployment schedule is active.", "default": true}, "paused": {"type": "boolean", "title": "Paused", "description": "Whether or not the deployment is paused.", "default": false}, "schedules": {"items": {"$ref": "#/components/schemas/DeploymentScheduleCreate"}, "type": "array", "title": "Schedules", "description": "A list of schedules for the deployment."}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for flow runs scheduled by the deployment."}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags for the deployment", "example": ["tag-1", "tag-2"]}, "work_queue_name": {"type": "string", "title": "Work Queue Name", "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."}, "work_pool_name": {"type": "string", "title": "Work Pool Name", "description": "The name of the deployment's work pool.", "example": "my-work-pool"}, "path": {"type": "string", "title": "Path", "description": "The path to the working directory for the workflow, relative to remote storage or an absolute path."}, "infra_overrides": {"type": "object", "title": "Infra Overrides", "description": "Overrides to apply to the base infrastructure block at runtime."}, "entrypoint": {"type": "string", "title": "Entrypoint", "description": "The path to the entrypoint for the workflow, relative to the `path`."}, "manifest_path": {"type": "string", "title": "Manifest Path", "description": "The path to the flow's manifest file, relative to the chosen storage."}, "storage_document_id": {"type": "string", "format": "uuid", "title": "Storage Document Id", "description": "The block document defining storage used for this flow."}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use for flow runs."}, "enforce_parameter_schema": {"type": "boolean", "title": "Enforce Parameter Schema", "description": "Whether or not the deployment should enforce the parameter schema."}}, "additionalProperties": false, "type": "object", "title": "DeploymentUpdate", "description": "Data used by the Prefect REST API to update a deployment."}, "Edge": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["id"], "title": "Edge", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "Flow": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the flow", "example": "my-flow"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of flow tags", "example": ["tag-1", "tag-2"]}}, "type": "object", "required": ["name"], "title": "Flow", "description": "An ORM representation of flow data."}, "FlowCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the flow", "example": "my-flow"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of flow tags", "example": ["tag-1", "tag-2"]}}, "additionalProperties": false, "type": "object", "title": "FlowCreate", "description": "Data used by the Prefect REST API to create a flow."}, "FlowFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/FlowFilterId"}], "title": "Id", "description": "Filter criteria for `Flow.id`"}, "deployment": {"allOf": [{"$ref": "#/components/schemas/FlowFilterDeployment"}], "title": "Deployment", "description": "Filter criteria for Flow deployments"}, "name": {"allOf": [{"$ref": "#/components/schemas/FlowFilterName"}], "title": "Name", "description": "Filter criteria for `Flow.name`"}, "tags": {"allOf": [{"$ref": "#/components/schemas/FlowFilterTags"}], "title": "Tags", "description": "Filter criteria for `Flow.tags`"}}, "additionalProperties": false, "type": "object", "title": "FlowFilter", "description": "Filter for flows. Only flows matching all criteria will be returned."}, "FlowFilterDeployment": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include flows without deployments"}}, "additionalProperties": false, "type": "object", "title": "FlowFilterDeployment", "description": "Filter by flows by deployment"}, "FlowFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow ids to include"}}, "additionalProperties": false, "type": "object", "title": "FlowFilterId", "description": "Filter by `Flow.id`."}, "FlowFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of flow names to include", "example": ["my-flow-1", "my-flow-2"]}, "like_": {"type": "string", "title": "Like ", "description": "A case-insensitive partial match. For example,  passing 'marvin' will match 'marvin', 'sad-Marvin', and 'marvin-robot'.", "example": "marvin"}}, "additionalProperties": false, "type": "object", "title": "FlowFilterName", "description": "Filter by `Flow.name`."}, "FlowFilterTags": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "all_": {"items": {"type": "string"}, "type": "array", "title": "All ", "description": "A list of tags. Flows will be returned only if their tags are a superset of the list", "example": ["tag-1", "tag-2"]}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include flows without tags"}}, "additionalProperties": false, "type": "object", "title": "FlowFilterTags", "description": "Filter by `Flow.tags`."}, "FlowRun": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the flow run. Defaults to a random slug if not specified.", "example": "my-flow-run"}, "flow_id": {"type": "string", "format": "uuid", "title": "Flow Id", "description": "The id of the flow being run."}, "state_id": {"type": "string", "format": "uuid", "title": "State Id", "description": "The id of the flow run's current state."}, "deployment_id": {"type": "string", "format": "uuid", "title": "Deployment Id", "description": "The id of the deployment associated with this flow run, if available."}, "work_queue_name": {"type": "string", "title": "Work Queue Name", "description": "The work queue that handled this flow run."}, "flow_version": {"type": "string", "title": "Flow Version", "description": "The version of the flow executed in this flow run.", "example": "1.0"}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for the flow run."}, "idempotency_key": {"type": "string", "title": "Idempotency Key", "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."}, "context": {"type": "object", "title": "Context", "description": "Additional context for the flow run.", "example": {"my_var": "my_val"}}, "empirical_policy": {"$ref": "#/components/schemas/FlowRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags on the flow run", "example": ["tag-1", "tag-2"]}, "parent_task_run_id": {"type": "string", "format": "uuid", "title": "Parent Task Run Id", "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."}, "state_type": {"allOf": [{"$ref": "#/components/schemas/StateType"}], "description": "The type of the current flow run state."}, "state_name": {"type": "string", "title": "State Name", "description": "The name of the current flow run state."}, "run_count": {"type": "integer", "title": "Run Count", "description": "The number of times the flow run was executed.", "default": 0}, "expected_start_time": {"type": "string", "format": "date-time", "title": "Expected Start Time", "description": "The flow run's expected start time."}, "next_scheduled_start_time": {"type": "string", "format": "date-time", "title": "Next Scheduled Start Time", "description": "The next time the flow run is scheduled to start."}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time", "description": "The actual start time."}, "end_time": {"type": "string", "format": "date-time", "title": "End Time", "description": "The actual end time."}, "total_run_time": {"type": "number", "format": "time-delta", "title": "Total Run Time", "description": "Total run time. If the flow run was executed multiple times, the time of each run will be summed.", "default": 0.0}, "estimated_run_time": {"type": "number", "format": "time-delta", "title": "Estimated Run Time", "description": "A real-time estimate of the total run time.", "default": 0.0}, "estimated_start_time_delta": {"type": "number", "format": "time-delta", "title": "Estimated Start Time Delta", "description": "The difference between actual and expected start time.", "default": 0.0}, "auto_scheduled": {"type": "boolean", "title": "Auto Scheduled", "description": "Whether or not the flow run was automatically scheduled.", "default": false}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use this flow run."}, "infrastructure_pid": {"type": "string", "title": "Infrastructure Pid", "description": "The id of the flow run as returned by an infrastructure block."}, "created_by": {"allOf": [{"$ref": "#/components/schemas/CreatedBy"}], "title": "Created By", "description": "Optional information about the creator of this flow run."}, "work_queue_id": {"type": "string", "format": "uuid", "title": "Work Queue Id", "description": "The id of the run's work pool queue."}, "state": {"allOf": [{"$ref": "#/components/schemas/State"}], "title": "State", "description": "The current state of the flow run."}, "job_variables": {"type": "object", "title": "Job Variables", "description": "Variables used as overrides in the base job template"}}, "type": "object", "required": ["flow_id"], "title": "FlowRun", "description": "An ORM representation of flow run data."}, "FlowRunCreate": {"properties": {"state": {"allOf": [{"$ref": "#/components/schemas/StateCreate"}], "title": "State", "description": "The state of the flow run to create"}, "name": {"type": "string", "title": "Name", "description": "The name of the flow run. Defaults to a random slug if not specified.", "example": "my-flow-run"}, "flow_id": {"type": "string", "format": "uuid", "title": "Flow Id", "description": "The id of the flow being run."}, "flow_version": {"type": "string", "title": "Flow Version", "description": "The version of the flow executed in this flow run.", "example": "1.0"}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for the flow run."}, "context": {"type": "object", "title": "Context", "description": "Additional context for the flow run.", "example": {"my_var": "my_val"}}, "parent_task_run_id": {"type": "string", "format": "uuid", "title": "Parent Task Run Id", "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use this flow run."}, "empirical_policy": {"$ref": "#/components/schemas/FlowRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags on the flow run", "example": ["tag-1", "tag-2"]}, "idempotency_key": {"type": "string", "title": "Idempotency Key", "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."}, "deployment_id": {"type": "string", "format": "uuid", "title": "Deployment Id", "description": "DEPRECATED: The id of the deployment associated with this flow run, if available.", "deprecated": true}}, "additionalProperties": false, "type": "object", "title": "FlowRunCreate", "description": "Data used by the Prefect REST API to create a flow run."}, "FlowRunFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterId"}], "title": "Id", "description": "Filter criteria for `FlowRun.id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterName"}], "title": "Name", "description": "Filter criteria for `FlowRun.name`"}, "tags": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterTags"}], "title": "Tags", "description": "Filter criteria for `FlowRun.tags`"}, "deployment_id": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterDeploymentId"}], "title": "Deployment Id", "description": "Filter criteria for `FlowRun.deployment_id`"}, "work_queue_name": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterWorkQueueName"}], "title": "Work Queue Name", "description": "Filter criteria for `FlowRun.work_queue_name"}, "state": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterState"}], "title": "State", "description": "Filter criteria for `FlowRun.state`"}, "flow_version": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterFlowVersion"}], "title": "Flow Version", "description": "Filter criteria for `FlowRun.flow_version`"}, "start_time": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterStartTime"}], "title": "Start Time", "description": "Filter criteria for `FlowRun.start_time`"}, "expected_start_time": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterExpectedStartTime"}], "title": "Expected Start Time", "description": "Filter criteria for `FlowRun.expected_start_time`"}, "next_scheduled_start_time": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterNextScheduledStartTime"}], "title": "Next Scheduled Start Time", "description": "Filter criteria for `FlowRun.next_scheduled_start_time`"}, "parent_flow_run_id": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterParentFlowRunId"}], "title": "Parent Flow Run Id", "description": "Filter criteria for subflows of the given flow runs"}, "parent_task_run_id": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterParentTaskRunId"}], "title": "Parent Task Run Id", "description": "Filter criteria for `FlowRun.parent_task_run_id`"}, "idempotency_key": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterIdempotencyKey"}], "title": "Idempotency Key", "description": "Filter criteria for `FlowRun.idempotency_key`"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilter", "description": "Filter flow runs. Only flow runs matching all criteria will be returned"}, "FlowRunFilterDeploymentId": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow run deployment ids to include"}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include flow runs without deployment ids"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterDeploymentId", "description": "Filter by `FlowRun.deployment_id`."}, "FlowRunFilterExpectedStartTime": {"properties": {"before_": {"type": "string", "format": "date-time", "title": "Before ", "description": "Only include flow runs scheduled to start at or before this time"}, "after_": {"type": "string", "format": "date-time", "title": "After ", "description": "Only include flow runs scheduled to start at or after this time"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterExpectedStartTime", "description": "Filter by `FlowRun.expected_start_time`."}, "FlowRunFilterFlowVersion": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of flow run flow_versions to include"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterFlowVersion", "description": "Filter by `FlowRun.flow_version`."}, "FlowRunFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow run ids to include"}, "not_any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Not Any ", "description": "A list of flow run ids to exclude"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterId", "description": "Filter by `FlowRun.id`."}, "FlowRunFilterIdempotencyKey": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of flow run idempotency keys to include"}, "not_any_": {"items": {"type": "string"}, "type": "array", "title": "Not Any ", "description": "A list of flow run idempotency keys to exclude"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterIdempotencyKey", "description": "Filter by FlowRun.idempotency_key."}, "FlowRunFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of flow run names to include", "example": ["my-flow-run-1", "my-flow-run-2"]}, "like_": {"type": "string", "title": "Like ", "description": "A case-insensitive partial match. For example,  passing 'marvin' will match 'marvin', 'sad-Marvin', and 'marvin-robot'.", "example": "marvin"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterName", "description": "Filter by `FlowRun.name`."}, "FlowRunFilterNextScheduledStartTime": {"properties": {"before_": {"type": "string", "format": "date-time", "title": "Before ", "description": "Only include flow runs with a next_scheduled_start_time or before this time"}, "after_": {"type": "string", "format": "date-time", "title": "After ", "description": "Only include flow runs with a next_scheduled_start_time at or after this time"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterNextScheduledStartTime", "description": "Filter by `FlowRun.next_scheduled_start_time`."}, "FlowRunFilterParentFlowRunId": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of parent flow run ids to include"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterParentFlowRunId", "description": "Filter for subflows of a given flow run"}, "FlowRunFilterParentTaskRunId": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow run parent_task_run_ids to include"}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include flow runs without parent_task_run_id"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterParentTaskRunId", "description": "Filter by `FlowRun.parent_task_run_id`."}, "FlowRunFilterStartTime": {"properties": {"before_": {"type": "string", "format": "date-time", "title": "Before ", "description": "Only include flow runs starting at or before this time"}, "after_": {"type": "string", "format": "date-time", "title": "After ", "description": "Only include flow runs starting at or after this time"}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only return flow runs without a start time"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterStartTime", "description": "Filter by `FlowRun.start_time`."}, "FlowRunFilterState": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "type": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterStateType"}], "title": "Type", "description": "Filter criteria for `FlowRun.state_type`"}, "name": {"allOf": [{"$ref": "#/components/schemas/FlowRunFilterStateName"}], "title": "Name", "description": "Filter criteria for `FlowRun.state_name`"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterState", "description": "Filter by `FlowRun.state_type` and `FlowRun.state_name`."}, "FlowRunFilterStateName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of flow run state names to include"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterStateName", "description": "Filter by `FlowRun.state_name`."}, "FlowRunFilterStateType": {"properties": {"any_": {"items": {"$ref": "#/components/schemas/StateType"}, "type": "array", "description": "A list of flow run state types to include"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterStateType", "description": "Filter by `FlowRun.state_type`."}, "FlowRunFilterTags": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "all_": {"items": {"type": "string"}, "type": "array", "title": "All ", "description": "A list of tags. Flow runs will be returned only if their tags are a superset of the list", "example": ["tag-1", "tag-2"]}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include flow runs without tags"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterTags", "description": "Filter by `FlowRun.tags`."}, "FlowRunFilterWorkQueueName": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of work queue names to include", "example": ["work_queue_1", "work_queue_2"]}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include flow runs without work queue names"}}, "additionalProperties": false, "type": "object", "title": "FlowRunFilterWorkQueueName", "description": "Filter by `FlowRun.work_queue_name`."}, "FlowRunInput": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run ID associated with the input."}, "key": {"type": "string", "title": "Key", "description": "The key of the input."}, "value": {"type": "string", "title": "Value", "description": "The value of the input."}, "sender": {"type": "string", "title": "Sender", "description": "The sender of the input."}}, "type": "object", "required": ["flow_run_id", "key", "value"], "title": "FlowRunInput", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "FlowRunNotificationPolicy": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the policy is currently active", "default": true}, "state_names": {"items": {"type": "string"}, "type": "array", "title": "State Names", "description": "The flow run states that trigger notifications"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "The flow run tags that trigger notifications (set [] to disable)"}, "block_document_id": {"type": "string", "format": "uuid", "title": "Block Document Id", "description": "The block document ID used for sending notifications"}, "message_template": {"type": "string", "title": "Message Template", "description": "A templatable notification message. Use {braces} to add variables. Valid variables include: 'flow_id', 'flow_name', 'flow_run_id', 'flow_run_name', 'flow_run_notification_policy_id', 'flow_run_parameters', 'flow_run_state_message', 'flow_run_state_name', 'flow_run_state_timestamp', 'flow_run_state_type', 'flow_run_url'", "example": "Flow run {flow_run_name} with id {flow_run_id} entered state {flow_run_state_name}."}}, "type": "object", "required": ["state_names", "tags", "block_document_id"], "title": "FlowRunNotificationPolicy", "description": "An ORM representation of a flow run notification."}, "FlowRunNotificationPolicyCreate": {"properties": {"is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the policy is currently active", "default": true}, "state_names": {"items": {"type": "string"}, "type": "array", "title": "State Names", "description": "The flow run states that trigger notifications"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "The flow run tags that trigger notifications (set [] to disable)"}, "block_document_id": {"type": "string", "format": "uuid", "title": "Block Document Id", "description": "The block document ID used for sending notifications"}, "message_template": {"type": "string", "title": "Message Template", "description": "A templatable notification message. Use {braces} to add variables. Valid variables include: 'flow_id', 'flow_name', 'flow_run_id', 'flow_run_name', 'flow_run_notification_policy_id', 'flow_run_parameters', 'flow_run_state_message', 'flow_run_state_name', 'flow_run_state_timestamp', 'flow_run_state_type', 'flow_run_url'", "example": "Flow run {flow_run_name} with id {flow_run_id} entered state {flow_run_state_name}."}}, "additionalProperties": false, "type": "object", "title": "FlowRunNotificationPolicyCreate", "description": "Data used by the Prefect REST API to create a flow run notification policy."}, "FlowRunNotificationPolicyFilter": {"properties": {"is_active": {"allOf": [{"$ref": "#/components/schemas/FlowRunNotificationPolicyFilterIsActive"}], "title": "Is Active", "description": "Filter criteria for `FlowRunNotificationPolicy.is_active`. ", "default": {"eq_": false}}}, "additionalProperties": false, "type": "object", "title": "FlowRunNotificationPolicyFilter", "description": "Filter FlowRunNotificationPolicies."}, "FlowRunNotificationPolicyFilterIsActive": {"properties": {"eq_": {"type": "boolean", "title": "Eq ", "description": "Filter notification policies for only those that are or are not active."}}, "additionalProperties": false, "type": "object", "title": "FlowRunNotificationPolicyFilterIsActive", "description": "Filter by `FlowRunNotificationPolicy.is_active`."}, "FlowRunNotificationPolicyUpdate": {"properties": {"is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the policy is currently active", "default": true}, "state_names": {"items": {"type": "string"}, "type": "array", "title": "State Names", "description": "The flow run states that trigger notifications"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "The flow run tags that trigger notifications (set [] to disable)"}, "block_document_id": {"type": "string", "format": "uuid", "title": "Block Document Id", "description": "The block document ID used for sending notifications"}, "message_template": {"type": "string", "title": "Message Template", "description": "A templatable notification message. Use {braces} to add variables. Valid variables include: 'flow_id', 'flow_name', 'flow_run_id', 'flow_run_name', 'flow_run_notification_policy_id', 'flow_run_parameters', 'flow_run_state_message', 'flow_run_state_name', 'flow_run_state_timestamp', 'flow_run_state_type', 'flow_run_url'", "example": "Flow run {flow_run_name} with id {flow_run_id} entered state {flow_run_state_name}."}}, "additionalProperties": false, "type": "object", "title": "FlowRunNotificationPolicyUpdate", "description": "Data used by the Prefect REST API to update a flow run notification policy."}, "FlowRunPolicy": {"properties": {"max_retries": {"type": "integer", "title": "Max Retries", "description": "The maximum number of retries. Field is not used. Please use `retries` instead.", "default": 0, "deprecated": true}, "retry_delay_seconds": {"type": "number", "title": "Retry Delay Seconds", "description": "The delay between retries. Field is not used. Please use `retry_delay` instead.", "default": 0, "deprecated": true}, "retries": {"type": "integer", "title": "Retries", "description": "The number of retries."}, "retry_delay": {"type": "integer", "title": "Retry Delay", "description": "The delay time between retries, in seconds."}, "pause_keys": {"items": {}, "type": "array", "uniqueItems": true, "title": "Pause Keys", "description": "Tracks pauses this run has observed."}, "resuming": {"type": "boolean", "title": "Resuming", "description": "Indicates if this run is resuming from a pause.", "default": false}}, "type": "object", "title": "FlowRunPolicy", "description": "Defines of how a flow run should retry."}, "FlowRunResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the flow run. Defaults to a random slug if not specified.", "example": "my-flow-run"}, "flow_id": {"type": "string", "format": "uuid", "title": "Flow Id", "description": "The id of the flow being run."}, "state_id": {"type": "string", "format": "uuid", "title": "State Id", "description": "The id of the flow run's current state."}, "deployment_id": {"type": "string", "format": "uuid", "title": "Deployment Id", "description": "The id of the deployment associated with this flow run, if available."}, "work_queue_id": {"type": "string", "format": "uuid", "title": "Work Queue Id", "description": "The id of the run's work pool queue."}, "work_queue_name": {"type": "string", "title": "Work Queue Name", "description": "The work queue that handled this flow run."}, "flow_version": {"type": "string", "title": "Flow Version", "description": "The version of the flow executed in this flow run.", "example": "1.0"}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for the flow run."}, "idempotency_key": {"type": "string", "title": "Idempotency Key", "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."}, "context": {"type": "object", "title": "Context", "description": "Additional context for the flow run.", "example": {"my_var": "my_val"}}, "empirical_policy": {"$ref": "#/components/schemas/FlowRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags on the flow run", "example": ["tag-1", "tag-2"]}, "parent_task_run_id": {"type": "string", "format": "uuid", "title": "Parent Task Run Id", "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."}, "state_type": {"allOf": [{"$ref": "#/components/schemas/StateType"}], "description": "The type of the current flow run state."}, "state_name": {"type": "string", "title": "State Name", "description": "The name of the current flow run state."}, "run_count": {"type": "integer", "title": "Run Count", "description": "The number of times the flow run was executed.", "default": 0}, "expected_start_time": {"type": "string", "format": "date-time", "title": "Expected Start Time", "description": "The flow run's expected start time."}, "next_scheduled_start_time": {"type": "string", "format": "date-time", "title": "Next Scheduled Start Time", "description": "The next time the flow run is scheduled to start."}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time", "description": "The actual start time."}, "end_time": {"type": "string", "format": "date-time", "title": "End Time", "description": "The actual end time."}, "total_run_time": {"type": "number", "format": "time-delta", "title": "Total Run Time", "description": "Total run time. If the flow run was executed multiple times, the time of each run will be summed.", "default": 0.0}, "estimated_run_time": {"type": "number", "format": "time-delta", "title": "Estimated Run Time", "description": "A real-time estimate of the total run time.", "default": 0.0}, "estimated_start_time_delta": {"type": "number", "format": "time-delta", "title": "Estimated Start Time Delta", "description": "The difference between actual and expected start time.", "default": 0.0}, "auto_scheduled": {"type": "boolean", "title": "Auto Scheduled", "description": "Whether or not the flow run was automatically scheduled.", "default": false}, "infrastructure_document_id": {"type": "string", "format": "uuid", "title": "Infrastructure Document Id", "description": "The block document defining infrastructure to use this flow run."}, "infrastructure_pid": {"type": "string", "title": "Infrastructure Pid", "description": "The id of the flow run as returned by an infrastructure block."}, "created_by": {"allOf": [{"$ref": "#/components/schemas/CreatedBy"}], "title": "Created By", "description": "Optional information about the creator of this flow run."}, "work_pool_id": {"type": "string", "format": "uuid", "title": "Work Pool Id", "description": "The id of the flow run's work pool."}, "work_pool_name": {"type": "string", "title": "Work Pool Name", "description": "The name of the flow run's work pool.", "example": "my-work-pool"}, "state": {"allOf": [{"$ref": "#/components/schemas/State"}], "title": "State", "description": "The current state of the flow run."}, "job_variables": {"type": "object", "title": "Job Variables", "description": "Variables used as overrides in the base job template"}}, "type": "object", "title": "FlowRunResponse", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "FlowRunSort": {"type": "string", "enum": ["ID_DESC", "START_TIME_ASC", "START_TIME_DESC", "EXPECTED_START_TIME_ASC", "EXPECTED_START_TIME_DESC", "NAME_ASC", "NAME_DESC", "NEXT_SCHEDULED_START_TIME_ASC", "END_TIME_DESC"], "title": "FlowRunSort", "description": "Defines flow run sorting options."}, "FlowRunUpdate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the flow run. Defaults to a random slug if not specified.", "example": "my-flow-run"}, "flow_version": {"type": "string", "title": "Flow Version", "description": "The version of the flow executed in this flow run.", "example": "1.0"}, "parameters": {"type": "object", "title": "Parameters", "description": "Parameters for the flow run."}, "empirical_policy": {"$ref": "#/components/schemas/FlowRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags on the flow run", "example": ["tag-1", "tag-2"]}, "infrastructure_pid": {"type": "string", "title": "Infrastructure Pid", "description": "The id of the flow run as returned by an infrastructure block."}, "job_variables": {"type": "object", "title": "Job Variables", "description": "Variables used as overrides in the base job template"}}, "additionalProperties": false, "type": "object", "title": "FlowRunUpdate", "description": "Data used by the Prefect REST API to update a flow run."}, "FlowSort": {"type": "string", "enum": ["CREATED_DESC", "UPDATED_DESC", "NAME_ASC", "NAME_DESC"], "title": "FlowSort", "description": "Defines flow sorting options."}, "FlowUpdate": {"properties": {"tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of flow tags", "example": ["tag-1", "tag-2"]}}, "additionalProperties": false, "type": "object", "title": "FlowUpdate", "description": "Data used by the Prefect REST API to update a flow."}, "Graph": {"properties": {"start_time": {"type": "string", "format": "date-time", "title": "Start Time"}, "end_time": {"type": "string", "format": "date-time", "title": "End Time"}, "root_node_ids": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Root Node Ids"}, "nodes": {"items": {"items": [{"type": "string", "format": "uuid"}, {"$ref": "#/components/schemas/Node"}], "type": "array", "maxItems": 2, "minItems": 2}, "type": "array", "title": "Nodes"}, "artifacts": {"items": {"$ref": "#/components/schemas/GraphArtifact"}, "type": "array", "title": "Artifacts"}, "states": {"items": {"$ref": "#/components/schemas/GraphState"}, "type": "array", "title": "States"}}, "type": "object", "required": ["start_time", "root_node_ids", "nodes", "artifacts", "states"], "title": "Graph", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "GraphArtifact": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "key": {"type": "string", "title": "Key"}, "type": {"type": "string", "title": "Type"}, "is_latest": {"type": "boolean", "title": "Is Latest"}}, "type": "object", "required": ["id", "created", "type", "is_latest"], "title": "GraphArtifact", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "GraphState": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "type": {"$ref": "#/components/schemas/StateType"}, "name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["id", "timestamp", "type", "name"], "title": "GraphState", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "HistoryResponse": {"properties": {"interval_start": {"type": "string", "format": "date-time", "title": "Interval Start", "description": "The start date of the interval."}, "interval_end": {"type": "string", "format": "date-time", "title": "Interval End", "description": "The end date of the interval."}, "states": {"items": {"$ref": "#/components/schemas/HistoryResponseState"}, "type": "array", "title": "States", "description": "A list of state histories during the interval."}}, "type": "object", "required": ["interval_start", "interval_end", "states"], "title": "HistoryResponse", "description": "Represents a history of aggregation states over an interval"}, "HistoryResponseState": {"properties": {"state_type": {"allOf": [{"$ref": "#/components/schemas/StateType"}], "description": "The state type."}, "state_name": {"type": "string", "title": "State Name", "description": "The state name."}, "count_runs": {"type": "integer", "title": "Count Runs", "description": "The number of runs in the specified state during the interval."}, "sum_estimated_run_time": {"type": "number", "format": "time-delta", "title": "Sum Estimated Run Time", "description": "The total estimated run time of all runs during the interval."}, "sum_estimated_lateness": {"type": "number", "format": "time-delta", "title": "Sum Estimated Lateness", "description": "The sum of differences between actual and expected start time during the interval."}}, "type": "object", "required": ["state_type", "state_name", "count_runs", "sum_estimated_run_time", "sum_estimated_lateness"], "title": "HistoryResponseState", "description": "Represents a single state's history over an interval."}, "IntervalSchedule": {"properties": {"interval": {"type": "number", "format": "time-delta", "title": "Interval"}, "anchor_date": {"type": "string", "format": "date-time", "title": "Anchor Date"}, "timezone": {"type": "string", "title": "Timezone", "example": "America/New_York"}}, "additionalProperties": false, "type": "object", "required": ["interval"], "title": "IntervalSchedule", "description": "A schedule formed by adding `interval` increments to an `anchor_date`. If no\n`anchor_date` is supplied, the current UTC time is used.  If a\ntimezone-naive datetime is provided for `anchor_date`, it is assumed to be\nin the schedule's timezone (or UTC). Even if supplied with an IANA timezone,\nanchor dates are always stored as UTC offsets, so a `timezone` can be\nprovided to determine localization behaviors like DST boundary handling. If\nnone is provided it will be inferred from the anchor date.\n\nNOTE: If the `IntervalSchedule` `anchor_date` or `timezone` is provided in a\nDST-observing timezone, then the schedule will adjust itself appropriately.\nIntervals greater than 24 hours will follow DST conventions, while intervals\nof less than 24 hours will follow UTC intervals. For example, an hourly\nschedule will fire every UTC hour, even across DST boundaries. When clocks\nare set back, this will result in two runs that *appear* to both be\nscheduled for 1am local time, even though they are an hour apart in UTC\ntime. For longer intervals, like a daily schedule, the interval schedule\nwill adjust for DST boundaries so that the clock-hour remains constant. This\nmeans that a daily schedule that always fires at 9am will observe DST and\ncontinue to fire at 9am in the local time zone.\n\nArgs:\n    interval (datetime.timedelta): an interval to schedule on.\n    anchor_date (DateTimeTZ, optional): an anchor date to schedule increments against;\n        if not provided, the current timestamp will be used.\n    timezone (str, optional): a valid timezone string."}, "Log": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The logger name."}, "level": {"type": "integer", "title": "Level", "description": "The log level."}, "message": {"type": "string", "title": "Message", "description": "The log message."}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp", "description": "The log timestamp."}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run ID associated with the log."}, "task_run_id": {"type": "string", "format": "uuid", "title": "Task Run Id", "description": "The task run ID associated with the log."}}, "type": "object", "required": ["name", "level", "message", "timestamp"], "title": "Log", "description": "An ORM representation of log data."}, "LogCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The logger name."}, "level": {"type": "integer", "title": "Level", "description": "The log level."}, "message": {"type": "string", "title": "Message", "description": "The log message."}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp", "description": "The log timestamp."}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run ID associated with the log."}, "task_run_id": {"type": "string", "format": "uuid", "title": "Task Run Id", "description": "The task run ID associated with the log."}}, "additionalProperties": false, "type": "object", "title": "LogCreate", "description": "Data used by the Prefect REST API to create a log."}, "LogFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogFilterLevel"}], "title": "Level", "description": "Filter criteria for `Log.level`"}, "timestamp": {"allOf": [{"$ref": "#/components/schemas/LogFilterTimestamp"}], "title": "Timestamp", "description": "Filter criteria for `Log.timestamp`"}, "flow_run_id": {"allOf": [{"$ref": "#/components/schemas/LogFilterFlowRunId"}], "title": "Flow Run Id", "description": "Filter criteria for `Log.flow_run_id`"}, "task_run_id": {"allOf": [{"$ref": "#/components/schemas/LogFilterTaskRunId"}], "title": "Task Run Id", "description": "Filter criteria for `Log.task_run_id`"}}, "additionalProperties": false, "type": "object", "title": "LogFilter", "description": "Filter logs. Only logs matching all criteria will be returned"}, "LogFilterFlowRunId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of flow run IDs to include"}}, "additionalProperties": false, "type": "object", "title": "LogFilterFlowRunId", "description": "Filter by `Log.flow_run_id`."}, "LogFilterLevel": {"properties": {"ge_": {"type": "integer", "title": "Ge ", "description": "Include logs with a level greater than or equal to this level", "example": 20}, "le_": {"type": "integer", "title": "Le ", "description": "Include logs with a level less than or equal to this level", "example": 50}}, "additionalProperties": false, "type": "object", "title": "LogFilterLevel", "description": "Filter by `Log.level`."}, "LogFilterTaskRunId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of task run IDs to include"}}, "additionalProperties": false, "type": "object", "title": "LogFilterTaskRunId", "description": "Filter by `Log.task_run_id`."}, "LogFilterTimestamp": {"properties": {"before_": {"type": "string", "format": "date-time", "title": "Before ", "description": "Only include logs with a timestamp at or before this time"}, "after_": {"type": "string", "format": "date-time", "title": "After ", "description": "Only include logs with a timestamp at or after this time"}}, "additionalProperties": false, "type": "object", "title": "LogFilterTimestamp", "description": "Filter by `Log.timestamp`."}, "LogSort": {"type": "string", "enum": ["TIMESTAMP_ASC", "TIMESTAMP_DESC"], "title": "LogSort", "description": "Defines log sorting options."}, "MinimalConcurrencyLimitResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "limit": {"type": "integer", "title": "Limit"}}, "type": "object", "required": ["id", "name", "limit"], "title": "MinimalConcurrencyLimitResponse", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "Node": {"properties": {"kind": {"type": "string", "enum": ["flow-run", "task-run"], "title": "Kind"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "label": {"type": "string", "title": "Label"}, "state_type": {"$ref": "#/components/schemas/StateType"}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time"}, "end_time": {"type": "string", "format": "date-time", "title": "End Time"}, "parents": {"items": {"$ref": "#/components/schemas/Edge"}, "type": "array", "title": "Parents"}, "children": {"items": {"$ref": "#/components/schemas/Edge"}, "type": "array", "title": "Children"}, "artifacts": {"items": {"$ref": "#/components/schemas/GraphArtifact"}, "type": "array", "title": "Artifacts"}}, "type": "object", "required": ["kind", "id", "label", "state_type", "start_time", "parents", "children", "artifacts"], "title": "Node", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "Operator": {"type": "string", "enum": ["and_", "or_"], "title": "Operator", "description": "Operators for combining filter criteria."}, "OrchestrationResult": {"properties": {"state": {"$ref": "#/components/schemas/State"}, "status": {"$ref": "#/components/schemas/SetStateStatus"}, "details": {"anyOf": [{"$ref": "#/components/schemas/StateAcceptDetails"}, {"$ref": "#/components/schemas/StateWaitDetails"}, {"$ref": "#/components/schemas/StateRejectDetails"}, {"$ref": "#/components/schemas/StateAbortDetails"}], "title": "Details"}}, "type": "object", "required": ["status", "details"], "title": "OrchestrationResult", "description": "A container for the output of state orchestration."}, "Parameter": {"properties": {"input_type": {"type": "string", "enum": ["parameter"], "title": "Input Type", "default": "parameter"}, "name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["name"], "title": "Parameter", "description": "Represents a parameter input to a task run."}, "QueueFilter": {"properties": {"tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "Only include flow runs with these tags in the work queue."}, "deployment_ids": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Deployment Ids", "description": "Only include flow runs from these deployments in the work queue."}}, "type": "object", "title": "QueueFilter", "description": "Filter criteria definition for a work queue."}, "RRuleSchedule": {"properties": {"rrule": {"type": "string", "title": "Rrule"}, "timezone": {"type": "string", "title": "Timezone", "example": "America/New_York"}}, "additionalProperties": false, "type": "object", "required": ["rrule"], "title": "RRuleSchedule", "description": "RRule schedule, based on the iCalendar standard\n([RFC 5545](https://datatracker.ietf.org/doc/html/rfc5545)) as\nimplemented in `dateutils.rrule`.\n\nRRules are appropriate for any kind of calendar-date manipulation, including\nirregular intervals, repetition, exclusions, week day or day-of-month\nadjustments, and more.\n\nNote that as a calendar-oriented standard, `RRuleSchedules` are sensitive to\nto the initial timezone provided. A 9am daily schedule with a daylight saving\ntime-aware start date will maintain a local 9am time through DST boundaries;\na 9am daily schedule with a UTC start date will maintain a 9am UTC time.\n\nArgs:\n    rrule (str): a valid RRule string\n    timezone (str, optional): a valid timezone string"}, "SavedSearch": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the saved search."}, "filters": {"items": {"$ref": "#/components/schemas/SavedSearchFilter"}, "type": "array", "title": "Filters", "description": "The filter set for the saved search."}}, "type": "object", "required": ["name"], "title": "SavedSearch", "description": "An ORM representation of saved search data. Represents a set of filter criteria."}, "SavedSearchCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the saved search."}, "filters": {"items": {"$ref": "#/components/schemas/SavedSearchFilter"}, "type": "array", "title": "Filters", "description": "The filter set for the saved search."}}, "additionalProperties": false, "type": "object", "title": "SavedSearchCreate", "description": "Data used by the Prefect REST API to create a saved search."}, "SavedSearchFilter": {"properties": {"object": {"type": "string", "title": "Object", "description": "The object over which to filter."}, "property": {"type": "string", "title": "Property", "description": "The property of the object on which to filter."}, "type": {"type": "string", "title": "Type", "description": "The type of the property."}, "operation": {"type": "string", "title": "Operation", "description": "The operator to apply to the object. For example, `equals`."}, "value": {"title": "Value", "description": "A JSON-compatible value for the filter."}}, "type": "object", "required": ["object", "property", "type", "operation", "value"], "title": "SavedSearchFilter", "description": "A filter for a saved search model. Intended for use by the Prefect UI."}, "SetStateStatus": {"type": "string", "enum": ["ACCEPT", "REJECT", "ABORT", "WAIT"], "title": "SetStateStatus", "description": "Enumerates return statuses for setting run states."}, "Settings": {"properties": {"PREFECT_HOME": {"type": "string", "format": "path", "title": "Prefect Home", "default": "~/.prefect", "env_names": ["prefect_home"]}, "PREFECT_EXTRA_ENTRYPOINTS": {"type": "string", "title": "Prefect Extra Entrypoints", "default": "", "env_names": ["prefect_extra_entrypoints"]}, "PREFECT_DEBUG_MODE": {"type": "boolean", "title": "Prefect Debug Mode", "default": false, "env_names": ["prefect_debug_mode"]}, "PREFECT_CLI_COLORS": {"type": "boolean", "title": "Prefect Cli Colors", "default": true, "env_names": ["prefect_cli_colors"]}, "PREFECT_CLI_PROMPT": {"type": "boolean", "title": "Prefect Cli Prompt", "env_names": ["prefect_cli_prompt"]}, "PREFECT_CLI_WRAP_LINES": {"type": "boolean", "title": "Prefect Cli Wrap Lines", "default": true, "env_names": ["prefect_cli_wrap_lines"]}, "PREFECT_TEST_MODE": {"type": "boolean", "title": "Prefect Test Mode", "default": false, "env_names": ["prefect_test_mode"]}, "PREFECT_UNIT_TEST_MODE": {"type": "boolean", "title": "Prefect Unit Test Mode", "default": false, "env_names": ["prefect_unit_test_mode"]}, "PREFECT_TEST_SETTING": {"title": "Prefect Test Setting", "env_names": ["prefect_test_setting"]}, "PREFECT_API_TLS_INSECURE_SKIP_VERIFY": {"type": "boolean", "title": "Prefect Api Tls Insecure Skip Verify", "default": false, "env_names": ["prefect_api_tls_insecure_skip_verify"]}, "PREFECT_API_URL": {"type": "string", "title": "Prefect Api Url", "env_names": ["prefect_api_url"]}, "PREFECT_SILENCE_API_URL_MISCONFIGURATION": {"type": "boolean", "title": "Prefect Silence Api Url Misconfiguration", "default": false, "env_names": ["prefect_silence_api_url_misconfiguration"]}, "PREFECT_API_KEY": {"type": "string", "title": "Prefect Api Key", "env_names": ["prefect_api_key"]}, "PREFECT_API_ENABLE_HTTP2": {"type": "boolean", "title": "Prefect Api Enable Http2", "default": true, "env_names": ["prefect_api_enable_http2"]}, "PREFECT_CLIENT_MAX_RETRIES": {"type": "integer", "title": "Prefect Client Max Retries", "default": 5, "env_names": ["prefect_client_max_retries"]}, "PREFECT_CLIENT_RETRY_JITTER_FACTOR": {"type": "number", "title": "Prefect Client Retry Jitter Factor", "default": 0.2, "env_names": ["prefect_client_retry_jitter_factor"]}, "PREFECT_CLIENT_RETRY_EXTRA_CODES": {"type": "string", "title": "Prefect Client Retry Extra Codes", "default": "", "env_names": ["prefect_client_retry_extra_codes"]}, "PREFECT_CLOUD_API_URL": {"type": "string", "title": "Prefect Cloud Api Url", "default": "https://api.prefect.cloud/api", "env_names": ["prefect_cloud_api_url"]}, "PREFECT_CLOUD_URL": {"type": "string", "title": "Prefect Cloud Url", "env_names": ["prefect_cloud_url"]}, "PREFECT_UI_URL": {"type": "string", "title": "Prefect Ui Url", "env_names": ["prefect_ui_url"]}, "PREFECT_CLOUD_UI_URL": {"type": "string", "title": "Prefect Cloud Ui Url", "env_names": ["prefect_cloud_ui_url"]}, "PREFECT_API_REQUEST_TIMEOUT": {"type": "number", "title": "Prefect Api Request Timeout", "default": 60.0, "env_names": ["prefect_api_request_timeout"]}, "PREFECT_EXPERIMENTAL_WARN": {"type": "boolean", "title": "Prefect Experimental Warn", "default": true, "env_names": ["prefect_experimental_warn"]}, "PREFECT_PROFILES_PATH": {"type": "string", "format": "path", "title": "Prefect Profiles Path", "default": "${PREFECT_HOME}/profiles.toml", "env_names": ["prefect_profiles_path"]}, "PREFECT_RESULTS_DEFAULT_SERIALIZER": {"type": "string", "title": "Prefect Results Default Serializer", "default": "pickle", "env_names": ["prefect_results_default_serializer"]}, "PREFECT_RESULTS_PERSIST_BY_DEFAULT": {"type": "boolean", "title": "Prefect Results Persist By Default", "default": false, "env_names": ["prefect_results_persist_by_default"]}, "PREFECT_TASKS_REFRESH_CACHE": {"type": "boolean", "title": "Prefect Tasks Refresh Cache", "default": false, "env_names": ["prefect_tasks_refresh_cache"]}, "PREFECT_TASK_DEFAULT_RETRIES": {"type": "integer", "title": "Prefect Task Default Retries", "default": 0, "env_names": ["prefect_task_default_retries"]}, "PREFECT_FLOW_DEFAULT_RETRIES": {"type": "integer", "title": "Prefect Flow Default Retries", "default": 0, "env_names": ["prefect_flow_default_retries"]}, "PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS": {"anyOf": [{"type": "integer"}, {"type": "number"}], "title": "Prefect Flow Default Retry Delay Seconds", "default": 0, "env_names": ["prefect_flow_default_retry_delay_seconds"]}, "PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"items": {"type": "number"}, "type": "array"}], "title": "Prefect Task Default Retry Delay Seconds", "default": 0, "env_names": ["prefect_task_default_retry_delay_seconds"]}, "PREFECT_TASK_RUN_TAG_CONCURRENCY_SLOT_WAIT_SECONDS": {"type": "integer", "title": "Prefect Task Run Tag Concurrency Slot Wait Seconds", "default": 30, "env_names": ["prefect_task_run_tag_concurrency_slot_wait_seconds"]}, "PREFECT_LOCAL_STORAGE_PATH": {"type": "string", "format": "path", "title": "Prefect Local Storage Path", "default": "${PREFECT_HOME}/storage", "env_names": ["prefect_local_storage_path"]}, "PREFECT_MEMO_STORE_PATH": {"type": "string", "format": "path", "title": "Prefect Memo Store Path", "default": "${PREFECT_HOME}/memo_store.toml", "env_names": ["prefect_memo_store_path"]}, "PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION": {"type": "boolean", "title": "Prefect Memoize Block Auto Registration", "default": true, "env_names": ["prefect_memoize_block_auto_registration"]}, "PREFECT_LOGGING_LEVEL": {"type": "string", "title": "Prefect Logging Level", "default": "INFO", "env_names": ["prefect_logging_level"]}, "PREFECT_LOGGING_INTERNAL_LEVEL": {"type": "string", "title": "Prefect Logging Internal Level", "default": "ERROR", "env_names": ["prefect_logging_internal_level"]}, "PREFECT_LOGGING_SERVER_LEVEL": {"type": "string", "title": "Prefect Logging Server Level", "default": "WARNING", "env_names": ["prefect_logging_server_level"]}, "PREFECT_LOGGING_SETTINGS_PATH": {"type": "string", "format": "path", "title": "Prefect Logging Settings Path", "default": "${PREFECT_HOME}/logging.yml", "env_names": ["prefect_logging_settings_path"]}, "PREFECT_LOGGING_EXTRA_LOGGERS": {"type": "string", "title": "Prefect Logging Extra Loggers", "default": "", "env_names": ["prefect_logging_extra_loggers"]}, "PREFECT_LOGGING_LOG_PRINTS": {"type": "boolean", "title": "Prefect Logging Log Prints", "default": false, "env_names": ["prefect_logging_log_prints"]}, "PREFECT_LOGGING_TO_API_ENABLED": {"type": "boolean", "title": "Prefect Logging To Api Enabled", "default": true, "env_names": ["prefect_logging_to_api_enabled"]}, "PREFECT_LOGGING_TO_API_BATCH_INTERVAL": {"type": "number", "title": "Prefect Logging To Api Batch Interval", "default": 2.0, "env_names": ["prefect_logging_to_api_batch_interval"]}, "PREFECT_LOGGING_TO_API_BATCH_SIZE": {"type": "integer", "title": "Prefect Logging To Api Batch Size", "default": 4000000, "env_names": ["prefect_logging_to_api_batch_size"]}, "PREFECT_LOGGING_TO_API_MAX_LOG_SIZE": {"type": "integer", "title": "Prefect Logging To Api Max Log Size", "default": 1000000, "env_names": ["prefect_logging_to_api_max_log_size"]}, "PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW": {"type": "string", "enum": ["warn", "error", "ignore"], "title": "Prefect Logging To Api When Missing Flow", "default": "warn", "env_names": ["prefect_logging_to_api_when_missing_flow"]}, "PREFECT_SQLALCHEMY_POOL_SIZE": {"type": "integer", "title": "Prefect Sqlalchemy Pool Size", "env_names": ["prefect_sqlalchemy_pool_size"]}, "PREFECT_SQLALCHEMY_MAX_OVERFLOW": {"type": "integer", "title": "Prefect Sqlalchemy Max Overflow", "env_names": ["prefect_sqlalchemy_max_overflow"]}, "PREFECT_LOGGING_COLORS": {"type": "boolean", "title": "Prefect Logging Colors", "default": true, "env_names": ["prefect_logging_colors"]}, "PREFECT_LOGGING_MARKUP": {"type": "boolean", "title": "Prefect Logging Markup", "default": false, "env_names": ["prefect_logging_markup"]}, "PREFECT_TASK_INTROSPECTION_WARN_THRESHOLD": {"type": "number", "title": "Prefect Task Introspection Warn Threshold", "default": 10.0, "env_names": ["prefect_task_introspection_warn_threshold"]}, "PREFECT_AGENT_QUERY_INTERVAL": {"type": "number", "title": "Prefect Agent Query Interval", "default": 15, "env_names": ["prefect_agent_query_interval"]}, "PREFECT_AGENT_PREFETCH_SECONDS": {"type": "integer", "title": "Prefect Agent Prefetch Seconds", "default": 15, "env_names": ["prefect_agent_prefetch_seconds"]}, "PREFECT_ASYNC_FETCH_STATE_RESULT": {"type": "boolean", "title": "Prefect Async Fetch State Result", "default": false, "env_names": ["prefect_async_fetch_state_result"]}, "PREFECT_API_BLOCKS_REGISTER_ON_START": {"type": "boolean", "title": "Prefect Api Blocks Register On Start", "default": true, "env_names": ["prefect_api_blocks_register_on_start"]}, "PREFECT_API_DATABASE_PASSWORD": {"type": "string", "title": "Prefect Api Database Password", "env_names": ["prefect_api_database_password"]}, "PREFECT_API_DATABASE_CONNECTION_URL": {"type": "string", "title": "Prefect Api Database Connection Url", "env_names": ["prefect_api_database_connection_url"]}, "PREFECT_API_DATABASE_ECHO": {"type": "boolean", "title": "Prefect Api Database Echo", "default": false, "env_names": ["prefect_api_database_echo"]}, "PREFECT_API_DATABASE_MIGRATE_ON_START": {"type": "boolean", "title": "Prefect Api Database Migrate On Start", "default": true, "env_names": ["prefect_api_database_migrate_on_start"]}, "PREFECT_API_DATABASE_TIMEOUT": {"type": "number", "title": "Prefect Api Database Timeout", "default": 10.0, "env_names": ["prefect_api_database_timeout"]}, "PREFECT_API_DATABASE_CONNECTION_TIMEOUT": {"type": "number", "title": "Prefect Api Database Connection Timeout", "default": 5, "env_names": ["prefect_api_database_connection_timeout"]}, "PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS": {"type": "number", "title": "Prefect Api Services Scheduler Loop Seconds", "default": 60, "env_names": ["prefect_api_services_scheduler_loop_seconds"]}, "PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE": {"type": "integer", "title": "Prefect Api Services Scheduler Deployment Batch Size", "default": 100, "env_names": ["prefect_api_services_scheduler_deployment_batch_size"]}, "PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS": {"type": "integer", "title": "Prefect Api Services Scheduler Max Runs", "default": 100, "env_names": ["prefect_api_services_scheduler_max_runs"]}, "PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS": {"type": "integer", "title": "Prefect Api Services Scheduler Min Runs", "default": 3, "env_names": ["prefect_api_services_scheduler_min_runs"]}, "PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME": {"type": "number", "format": "time-delta", "title": "Prefect Api Services Scheduler Max Scheduled Time", "default": 8640000.0, "env_names": ["prefect_api_services_scheduler_max_scheduled_time"]}, "PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME": {"type": "number", "format": "time-delta", "title": "Prefect Api Services Scheduler Min Scheduled Time", "default": 3600.0, "env_names": ["prefect_api_services_scheduler_min_scheduled_time"]}, "PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE": {"type": "integer", "title": "Prefect Api Services Scheduler Insert Batch Size", "default": 500, "env_names": ["prefect_api_services_scheduler_insert_batch_size"]}, "PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS": {"type": "number", "title": "Prefect Api Services Late Runs Loop Seconds", "default": 5, "env_names": ["prefect_api_services_late_runs_loop_seconds"]}, "PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS": {"type": "number", "format": "time-delta", "title": "Prefect Api Services Late Runs After Seconds", "default": 5.0, "env_names": ["prefect_api_services_late_runs_after_seconds"]}, "PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS": {"type": "number", "title": "Prefect Api Services Pause Expirations Loop Seconds", "default": 5, "env_names": ["prefect_api_services_pause_expirations_loop_seconds"]}, "PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS": {"type": "number", "title": "Prefect Api Services Cancellation Cleanup Loop Seconds", "default": 20, "env_names": ["prefect_api_services_cancellation_cleanup_loop_seconds"]}, "PREFECT_API_DEFAULT_LIMIT": {"type": "integer", "title": "Prefect Api Default Limit", "default": 200, "env_names": ["prefect_api_default_limit"]}, "PREFECT_SERVER_API_HOST": {"type": "string", "title": "Prefect Server Api Host", "default": "127.0.0.1", "env_names": ["prefect_server_api_host"]}, "PREFECT_SERVER_API_PORT": {"type": "integer", "title": "Prefect Server Api Port", "default": 4200, "env_names": ["prefect_server_api_port"]}, "PREFECT_SERVER_API_KEEPALIVE_TIMEOUT": {"type": "integer", "title": "Prefect Server Api Keepalive Timeout", "default": 5, "env_names": ["prefect_server_api_keepalive_timeout"]}, "PREFECT_SERVER_CSRF_PROTECTION_ENABLED": {"type": "boolean", "title": "Prefect Server Csrf Protection Enabled", "default": false, "env_names": ["prefect_server_csrf_protection_enabled"]}, "PREFECT_SERVER_CSRF_TOKEN_EXPIRATION": {"type": "number", "format": "time-delta", "title": "Prefect Server Csrf Token Expiration", "default": 3600.0, "env_names": ["prefect_server_csrf_token_expiration"]}, "PREFECT_UI_ENABLED": {"type": "boolean", "title": "Prefect Ui Enabled", "default": true, "env_names": ["prefect_ui_enabled"]}, "PREFECT_UI_API_URL": {"type": "string", "title": "Prefect Ui Api Url", "env_names": ["prefect_ui_api_url"]}, "PREFECT_SERVER_ANALYTICS_ENABLED": {"type": "boolean", "title": "Prefect Server Analytics Enabled", "default": true, "env_names": ["prefect_server_analytics_enabled"]}, "PREFECT_API_SERVICES_SCHEDULER_ENABLED": {"type": "boolean", "title": "Prefect Api Services Scheduler Enabled", "default": true, "env_names": ["prefect_api_services_scheduler_enabled"]}, "PREFECT_API_SERVICES_LATE_RUNS_ENABLED": {"type": "boolean", "title": "Prefect Api Services Late Runs Enabled", "default": true, "env_names": ["prefect_api_services_late_runs_enabled"]}, "PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED": {"type": "boolean", "title": "Prefect Api Services Flow Run Notifications Enabled", "default": true, "env_names": ["prefect_api_services_flow_run_notifications_enabled"]}, "PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED": {"type": "boolean", "title": "Prefect Api Services Pause Expirations Enabled", "default": true, "env_names": ["prefect_api_services_pause_expirations_enabled"]}, "PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH": {"type": "integer", "title": "Prefect Api Task Cache Key Max Length", "default": 2000, "env_names": ["prefect_api_task_cache_key_max_length"]}, "PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED": {"type": "boolean", "title": "Prefect Api Services Cancellation Cleanup Enabled", "default": true, "env_names": ["prefect_api_services_cancellation_cleanup_enabled"]}, "PREFECT_API_MAX_FLOW_RUN_GRAPH_NODES": {"type": "integer", "title": "Prefect Api Max Flow Run Graph Nodes", "default": 10000, "env_names": ["prefect_api_max_flow_run_graph_nodes"]}, "PREFECT_API_MAX_FLOW_RUN_GRAPH_ARTIFACTS": {"type": "integer", "title": "Prefect Api Max Flow Run Graph Artifacts", "default": 10000, "env_names": ["prefect_api_max_flow_run_graph_artifacts"]}, "PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS_ON_FLOW_RUN_GRAPH": {"type": "boolean", "title": "Prefect Experimental Enable Artifacts On Flow Run Graph", "default": false, "env_names": ["prefect_experimental_enable_artifacts_on_flow_run_graph"]}, "PREFECT_EXPERIMENTAL_ENABLE_STATES_ON_FLOW_RUN_GRAPH": {"type": "boolean", "title": "Prefect Experimental Enable States On Flow Run Graph", "default": false, "env_names": ["prefect_experimental_enable_states_on_flow_run_graph"]}, "PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT": {"type": "boolean", "title": "Prefect Experimental Enable Events Client", "default": true, "env_names": ["prefect_experimental_enable_events_client"]}, "PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT": {"type": "boolean", "title": "Prefect Experimental Warn Events Client", "default": false, "env_names": ["prefect_experimental_warn_events_client"]}, "PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS": {"type": "boolean", "title": "Prefect Experimental Enable Work Pools", "default": true, "env_names": ["prefect_experimental_enable_work_pools"]}, "PREFECT_EXPERIMENTAL_WARN_WORK_POOLS": {"type": "boolean", "title": "Prefect Experimental Warn Work Pools", "default": false, "env_names": ["prefect_experimental_warn_work_pools"]}, "PREFECT_EXPERIMENTAL_ENABLE_WORKERS": {"type": "boolean", "title": "Prefect Experimental Enable Workers", "default": true, "env_names": ["prefect_experimental_enable_workers"]}, "PREFECT_EXPERIMENTAL_WARN_WORKERS": {"type": "boolean", "title": "Prefect Experimental Warn Workers", "default": false, "env_names": ["prefect_experimental_warn_workers"]}, "PREFECT_EXPERIMENTAL_WARN_VISUALIZE": {"type": "boolean", "title": "Prefect Experimental Warn Visualize", "default": false, "env_names": ["prefect_experimental_warn_visualize"]}, "PREFECT_EXPERIMENTAL_ENABLE_ENHANCED_CANCELLATION": {"type": "boolean", "title": "Prefect Experimental Enable Enhanced Cancellation", "default": true, "env_names": ["prefect_experimental_enable_enhanced_cancellation"]}, "PREFECT_EXPERIMENTAL_ENABLE_ENHANCED_DEPLOYMENT_PARAMETERS": {"type": "boolean", "title": "Prefect Experimental Enable Enhanced Deployment Parameters", "default": true, "env_names": ["prefect_experimental_enable_enhanced_deployment_parameters"]}, "PREFECT_EXPERIMENTAL_WARN_ENHANCED_CANCELLATION": {"type": "boolean", "title": "Prefect Experimental Warn Enhanced Cancellation", "default": false, "env_names": ["prefect_experimental_warn_enhanced_cancellation"]}, "PREFECT_EXPERIMENTAL_ENABLE_DEPLOYMENT_STATUS": {"type": "boolean", "title": "Prefect Experimental Enable Deployment Status", "default": true, "env_names": ["prefect_experimental_enable_deployment_status"]}, "PREFECT_EXPERIMENTAL_WARN_DEPLOYMENT_STATUS": {"type": "boolean", "title": "Prefect Experimental Warn Deployment Status", "default": false, "env_names": ["prefect_experimental_warn_deployment_status"]}, "PREFECT_EXPERIMENTAL_FLOW_RUN_INPUT": {"type": "boolean", "title": "Prefect Experimental Flow Run Input", "default": false, "env_names": ["prefect_experimental_flow_run_input"]}, "PREFECT_EXPERIMENTAL_WARN_FLOW_RUN_INPUT": {"type": "boolean", "title": "Prefect Experimental Warn Flow Run Input", "default": true, "env_names": ["prefect_experimental_warn_flow_run_input"]}, "PREFECT_RUNNER_PROCESS_LIMIT": {"type": "integer", "title": "Prefect Runner Process Limit", "default": 5, "env_names": ["prefect_runner_process_limit"]}, "PREFECT_RUNNER_POLL_FREQUENCY": {"type": "integer", "title": "Prefect Runner Poll Frequency", "default": 10, "env_names": ["prefect_runner_poll_frequency"]}, "PREFECT_RUNNER_SERVER_MISSED_POLLS_TOLERANCE": {"type": "integer", "title": "Prefect Runner Server Missed Polls Tolerance", "default": 2, "env_names": ["prefect_runner_server_missed_polls_tolerance"]}, "PREFECT_RUNNER_SERVER_HOST": {"type": "string", "title": "Prefect Runner Server Host", "default": "localhost", "env_names": ["prefect_runner_server_host"]}, "PREFECT_RUNNER_SERVER_PORT": {"type": "integer", "title": "Prefect Runner Server Port", "default": 8080, "env_names": ["prefect_runner_server_port"]}, "PREFECT_RUNNER_SERVER_LOG_LEVEL": {"type": "string", "title": "Prefect Runner Server Log Level", "default": "error", "env_names": ["prefect_runner_server_log_level"]}, "PREFECT_RUNNER_SERVER_ENABLE": {"type": "boolean", "title": "Prefect Runner Server Enable", "default": false, "env_names": ["prefect_runner_server_enable"]}, "PREFECT_WORKER_HEARTBEAT_SECONDS": {"type": "number", "title": "Prefect Worker Heartbeat Seconds", "default": 30, "env_names": ["prefect_worker_heartbeat_seconds"]}, "PREFECT_WORKER_QUERY_SECONDS": {"type": "number", "title": "Prefect Worker Query Seconds", "default": 10, "env_names": ["prefect_worker_query_seconds"]}, "PREFECT_WORKER_PREFETCH_SECONDS": {"type": "number", "title": "Prefect Worker Prefetch Seconds", "default": 10, "env_names": ["prefect_worker_prefetch_seconds"]}, "PREFECT_WORKER_WEBSERVER_HOST": {"type": "string", "title": "Prefect Worker Webserver Host", "default": "0.0.0.0", "env_names": ["prefect_worker_webserver_host"]}, "PREFECT_WORKER_WEBSERVER_PORT": {"type": "integer", "title": "Prefect Worker Webserver Port", "default": 8080, "env_names": ["prefect_worker_webserver_port"]}, "PREFECT_TASK_SCHEDULING_DEFAULT_STORAGE_BLOCK": {"type": "string", "title": "Prefect Task Scheduling Default Storage Block", "default": "local-file-system/prefect-task-scheduling", "env_names": ["prefect_task_scheduling_default_storage_block"]}, "PREFECT_TASK_SCHEDULING_DELETE_FAILED_SUBMISSIONS": {"type": "boolean", "title": "Prefect Task Scheduling Delete Failed Submissions", "default": true, "env_names": ["prefect_task_scheduling_delete_failed_submissions"]}, "PREFECT_TASK_SCHEDULING_MAX_SCHEDULED_QUEUE_SIZE": {"type": "integer", "title": "Prefect Task Scheduling Max Scheduled Queue Size", "default": 1000, "env_names": ["prefect_task_scheduling_max_scheduled_queue_size"]}, "PREFECT_TASK_SCHEDULING_MAX_RETRY_QUEUE_SIZE": {"type": "integer", "title": "Prefect Task Scheduling Max Retry Queue Size", "default": 100, "env_names": ["prefect_task_scheduling_max_retry_queue_size"]}, "PREFECT_TASK_SCHEDULING_PENDING_TASK_TIMEOUT": {"type": "number", "format": "time-delta", "title": "Prefect Task Scheduling Pending Task Timeout", "default": 30.0, "env_names": ["prefect_task_scheduling_pending_task_timeout"]}, "PREFECT_EXPERIMENTAL_ENABLE_FLOW_RUN_INFRA_OVERRIDES": {"type": "boolean", "title": "Prefect Experimental Enable Flow Run Infra Overrides", "default": false, "env_names": ["prefect_experimental_enable_flow_run_infra_overrides"]}, "PREFECT_EXPERIMENTAL_WARN_FLOW_RUN_INFRA_OVERRIDES": {"type": "boolean", "title": "Prefect Experimental Warn Flow Run Infra Overrides", "default": true, "env_names": ["prefect_experimental_warn_flow_run_infra_overrides"]}, "PREFECT_EXPERIMENTAL_ENABLE_EXTRA_RUNNER_ENDPOINTS": {"type": "boolean", "title": "Prefect Experimental Enable Extra Runner Endpoints", "default": false, "env_names": ["prefect_experimental_enable_extra_runner_endpoints"]}, "PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS": {"type": "boolean", "title": "Prefect Experimental Enable Artifacts", "default": true, "env_names": ["prefect_experimental_enable_artifacts"]}, "PREFECT_EXPERIMENTAL_WARN_ARTIFACTS": {"type": "boolean", "title": "Prefect Experimental Warn Artifacts", "default": false, "env_names": ["prefect_experimental_warn_artifacts"]}, "PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD": {"type": "boolean", "title": "Prefect Experimental Enable Workspace Dashboard", "default": true, "env_names": ["prefect_experimental_enable_workspace_dashboard"]}, "PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD": {"type": "boolean", "title": "Prefect Experimental Warn Workspace Dashboard", "default": false, "env_names": ["prefect_experimental_warn_workspace_dashboard"]}, "PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING": {"type": "boolean", "title": "Prefect Experimental Enable Task Scheduling", "default": false, "env_names": ["prefect_experimental_enable_task_scheduling"]}, "PREFECT_EXPERIMENTAL_ENABLE_WORK_QUEUE_STATUS": {"type": "boolean", "title": "Prefect Experimental Enable Work Queue Status", "default": true, "env_names": ["prefect_experimental_enable_work_queue_status"]}, "PREFECT_DEFAULT_RESULT_STORAGE_BLOCK": {"type": "string", "title": "Prefect Default Result Storage Block", "env_names": ["prefect_default_result_storage_block"]}, "PREFECT_DEFAULT_WORK_POOL_NAME": {"type": "string", "title": "Prefect Default Work Pool Name", "env_names": ["prefect_default_work_pool_name"]}, "PREFECT_DEFAULT_DOCKER_BUILD_NAMESPACE": {"type": "string", "title": "Prefect Default Docker Build Namespace", "env_names": ["prefect_default_docker_build_namespace"]}, "PREFECT_UI_SERVE_BASE": {"type": "string", "title": "Prefect Ui Serve Base", "default": "/", "env_names": ["prefect_ui_serve_base"]}, "PREFECT_UI_STATIC_DIRECTORY": {"type": "string", "title": "Prefect Ui Static Directory", "env_names": ["prefect_ui_static_directory"]}}, "additionalProperties": false, "type": "object", "title": "Settings", "description": "Contains validated Prefect settings.\n\nSettings should be accessed using the relevant `Setting` object. For example:\n```python\nfrom prefect.settings import PREFECT_HOME\nPREFECT_HOME.value()\n```\n\nAccessing a setting attribute directly will ignore any `value_callback` mutations.\nThis is not recommended:\n```python\nfrom prefect.settings import Settings\nSettings().PREFECT_PROFILES_PATH  # PosixPath('${PREFECT_HOME}/profiles.toml')\n```"}, "SimpleFlowRun": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id", "description": "The flow run id."}, "state_type": {"allOf": [{"$ref": "#/components/schemas/StateType"}], "description": "The state type."}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp", "description": "The start time of the run, or the expected start time if it hasn't run yet."}, "duration": {"type": "number", "format": "time-delta", "title": "Duration", "description": "The total run time of the run."}, "lateness": {"type": "number", "format": "time-delta", "title": "Lateness", "description": "The delay between the expected and actual start time."}}, "type": "object", "required": ["id", "state_type", "timestamp", "duration", "lateness"], "title": "SimpleFlowRun", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "State": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "type": {"$ref": "#/components/schemas/StateType"}, "name": {"type": "string", "title": "Name"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "message": {"type": "string", "title": "Message", "example": "Run started"}, "data": {"title": "Data", "description": "Data associated with the state, e.g. a result. Content must be storable as JSON."}, "state_details": {"$ref": "#/components/schemas/StateDetails"}}, "type": "object", "required": ["type"], "title": "State", "description": "Represents the state of a run."}, "StateAbortDetails": {"properties": {"type": {"type": "string", "enum": ["abort_details"], "title": "Type", "description": "The type of state transition detail. Used to ensure pydantic does not coerce into a different type.", "default": "abort_details"}, "reason": {"type": "string", "title": "Reason", "description": "The reason why the state transition was aborted."}}, "type": "object", "title": "StateAbortDetails", "description": "Details associated with an ABORT state transition."}, "StateAcceptDetails": {"properties": {"type": {"type": "string", "enum": ["accept_details"], "title": "Type", "description": "The type of state transition detail. Used to ensure pydantic does not coerce into a different type.", "default": "accept_details"}}, "type": "object", "title": "StateAcceptDetails", "description": "Details associated with an ACCEPT state transition."}, "StateCreate": {"properties": {"type": {"$ref": "#/components/schemas/StateType"}, "name": {"type": "string", "title": "Name"}, "message": {"type": "string", "title": "Message", "example": "Run started"}, "data": {"title": "Data", "description": "Data associated with the state, e.g. a result. Content must be storable as JSON."}, "state_details": {"$ref": "#/components/schemas/StateDetails"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp", "ignored": true}, "id": {"type": "string", "format": "uuid", "title": "Id", "ignored": true}}, "additionalProperties": false, "type": "object", "title": "StateCreate", "description": "Data used by the Prefect REST API to create a new state."}, "StateDetails": {"properties": {"flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id"}, "task_run_id": {"type": "string", "format": "uuid", "title": "Task Run Id"}, "child_flow_run_id": {"type": "string", "format": "uuid", "title": "Child Flow Run Id"}, "scheduled_time": {"type": "string", "format": "date-time", "title": "Scheduled Time"}, "cache_key": {"type": "string", "title": "Cache Key"}, "cache_expiration": {"type": "string", "format": "date-time", "title": "Cache Expiration"}, "untrackable_result": {"type": "boolean", "title": "Untrackable Result", "default": false}, "pause_timeout": {"type": "string", "format": "date-time", "title": "Pause Timeout"}, "pause_reschedule": {"type": "boolean", "title": "Pause Reschedule", "default": false}, "pause_key": {"type": "string", "title": "Pause Key"}, "run_input_keyset": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Run Input Keyset"}, "refresh_cache": {"type": "boolean", "title": "Refresh Cache"}, "retriable": {"type": "boolean", "title": "Retriable"}, "transition_id": {"type": "string", "format": "uuid", "title": "Transition Id"}, "task_parameters_id": {"type": "string", "format": "uuid", "title": "Task Parameters Id"}}, "type": "object", "title": "StateDetails", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "StateRejectDetails": {"properties": {"type": {"type": "string", "enum": ["reject_details"], "title": "Type", "description": "The type of state transition detail. Used to ensure pydantic does not coerce into a different type.", "default": "reject_details"}, "reason": {"type": "string", "title": "Reason", "description": "The reason why the state transition was rejected."}}, "type": "object", "title": "StateRejectDetails", "description": "Details associated with a REJECT state transition."}, "StateType": {"type": "string", "enum": ["SCHEDULED", "PENDING", "RUNNING", "COMPLETED", "FAILED", "CANCELLED", "CRASHED", "PAUSED", "CANCELLING"], "title": "StateType", "description": "Enumeration of state types."}, "StateWaitDetails": {"properties": {"type": {"type": "string", "enum": ["wait_details"], "title": "Type", "description": "The type of state transition detail. Used to ensure pydantic does not coerce into a different type.", "default": "wait_details"}, "delay_seconds": {"type": "integer", "title": "Delay Seconds", "description": "The length of time in seconds the client should wait before transitioning states."}, "reason": {"type": "string", "title": "Reason", "description": "The reason why the state transition should wait."}}, "type": "object", "required": ["delay_seconds"], "title": "StateWaitDetails", "description": "Details associated with a WAIT state transition."}, "TaskRun": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "example": "my-task-run"}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run id of the task run."}, "task_key": {"type": "string", "title": "Task Key", "description": "A unique identifier for the task being run."}, "dynamic_key": {"type": "string", "title": "Dynamic Key", "description": "A dynamic key used to differentiate between multiple runs of the same task within the same flow run."}, "cache_key": {"type": "string", "title": "Cache Key", "description": "An optional cache key. If a COMPLETED state associated with this cache key is found, the cached COMPLETED state will be used instead of executing the task run."}, "cache_expiration": {"type": "string", "format": "date-time", "title": "Cache Expiration", "description": "Specifies when the cached state should expire."}, "task_version": {"type": "string", "title": "Task Version", "description": "The version of the task being run."}, "empirical_policy": {"$ref": "#/components/schemas/TaskRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags for the task run.", "example": ["tag-1", "tag-2"]}, "state_id": {"type": "string", "format": "uuid", "title": "State Id", "description": "The id of the current task run state."}, "task_inputs": {"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/TaskRunResult"}, {"$ref": "#/components/schemas/Parameter"}, {"$ref": "#/components/schemas/Constant"}]}, "type": "array"}, "type": "object", "title": "Task Inputs", "description": "Tracks the source of inputs to a task run. Used for internal bookkeeping."}, "state_type": {"allOf": [{"$ref": "#/components/schemas/StateType"}], "description": "The type of the current task run state."}, "state_name": {"type": "string", "title": "State Name", "description": "The name of the current task run state."}, "run_count": {"type": "integer", "title": "Run Count", "description": "The number of times the task run has been executed.", "default": 0}, "flow_run_run_count": {"type": "integer", "title": "Flow Run Run Count", "description": "If the parent flow has retried, this indicates the flow retry this run is associated with.", "default": 0}, "expected_start_time": {"type": "string", "format": "date-time", "title": "Expected Start Time", "description": "The task run's expected start time."}, "next_scheduled_start_time": {"type": "string", "format": "date-time", "title": "Next Scheduled Start Time", "description": "The next time the task run is scheduled to start."}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time", "description": "The actual start time."}, "end_time": {"type": "string", "format": "date-time", "title": "End Time", "description": "The actual end time."}, "total_run_time": {"type": "number", "format": "time-delta", "title": "Total Run Time", "description": "Total run time. If the task run was executed multiple times, the time of each run will be summed.", "default": 0.0}, "estimated_run_time": {"type": "number", "format": "time-delta", "title": "Estimated Run Time", "description": "A real-time estimate of total run time.", "default": 0.0}, "estimated_start_time_delta": {"type": "number", "format": "time-delta", "title": "Estimated Start Time Delta", "description": "The difference between actual and expected start time.", "default": 0.0}, "state": {"allOf": [{"$ref": "#/components/schemas/State"}], "title": "State", "description": "The current task run state."}}, "type": "object", "required": ["task_key", "dynamic_key"], "title": "TaskRun", "description": "An ORM representation of task run data."}, "TaskRunCount": {"properties": {"completed": {"type": "integer", "title": "Completed", "description": "The number of completed task runs."}, "failed": {"type": "integer", "title": "Failed", "description": "The number of failed task runs."}}, "type": "object", "required": ["completed", "failed"], "title": "TaskRunCount", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "TaskRunCreate": {"properties": {"state": {"allOf": [{"$ref": "#/components/schemas/StateCreate"}], "title": "State", "description": "The state of the task run to create"}, "name": {"type": "string", "title": "Name", "example": "my-task-run"}, "flow_run_id": {"type": "string", "format": "uuid", "title": "Flow Run Id", "description": "The flow run id of the task run."}, "task_key": {"type": "string", "title": "Task Key", "description": "A unique identifier for the task being run."}, "dynamic_key": {"type": "string", "title": "Dynamic Key", "description": "A dynamic key used to differentiate between multiple runs of the same task within the same flow run."}, "cache_key": {"type": "string", "title": "Cache Key", "description": "An optional cache key. If a COMPLETED state associated with this cache key is found, the cached COMPLETED state will be used instead of executing the task run."}, "cache_expiration": {"type": "string", "format": "date-time", "title": "Cache Expiration", "description": "Specifies when the cached state should expire."}, "task_version": {"type": "string", "title": "Task Version", "description": "The version of the task being run."}, "empirical_policy": {"$ref": "#/components/schemas/TaskRunPolicy"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of tags for the task run.", "example": ["tag-1", "tag-2"]}, "task_inputs": {"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/TaskRunResult"}, {"$ref": "#/components/schemas/Parameter"}, {"$ref": "#/components/schemas/Constant"}]}, "type": "array"}, "type": "object", "title": "Task Inputs", "description": "Tracks the source of inputs to a task run. Used for internal bookkeeping."}}, "additionalProperties": false, "type": "object", "title": "TaskRunCreate", "description": "Data used by the Prefect REST API to create a task run"}, "TaskRunFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterId"}], "title": "Id", "description": "Filter criteria for `TaskRun.id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterName"}], "title": "Name", "description": "Filter criteria for `TaskRun.name`"}, "tags": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterTags"}], "title": "Tags", "description": "Filter criteria for `TaskRun.tags`"}, "state": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterState"}], "title": "State", "description": "Filter criteria for `TaskRun.state`"}, "start_time": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterStartTime"}], "title": "Start Time", "description": "Filter criteria for `TaskRun.start_time`"}, "subflow_runs": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterSubFlowRuns"}], "title": "Subflow Runs", "description": "Filter criteria for `TaskRun.subflow_run`"}, "flow_run_id": {"allOf": [{"$ref": "#/components/schemas/TaskRunFilterFlowRunId"}], "title": "Flow Run Id", "description": "Filter criteria for `TaskRun.flow_run_id`"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilter", "description": "Filter task runs. Only task runs matching all criteria will be returned"}, "TaskRunFilterFlowRunId": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of task run flow run ids to include"}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "Filter for task runs with None as their flow run id", "default": false}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterFlowRunId", "description": "Filter by `TaskRun.flow_run_id`."}, "TaskRunFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of task run ids to include"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterId", "description": "Filter by `TaskRun.id`."}, "TaskRunFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of task run names to include", "example": ["my-task-run-1", "my-task-run-2"]}, "like_": {"type": "string", "title": "Like ", "description": "A case-insensitive partial match. For example,  passing 'marvin' will match 'marvin', 'sad-Marvin', and 'marvin-robot'.", "example": "marvin"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterName", "description": "Filter by `TaskRun.name`."}, "TaskRunFilterStartTime": {"properties": {"before_": {"type": "string", "format": "date-time", "title": "Before ", "description": "Only include task runs starting at or before this time"}, "after_": {"type": "string", "format": "date-time", "title": "After ", "description": "Only include task runs starting at or after this time"}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only return task runs without a start time"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterStartTime", "description": "Filter by `TaskRun.start_time`."}, "TaskRunFilterState": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "type": {"$ref": "#/components/schemas/TaskRunFilterStateType"}, "name": {"$ref": "#/components/schemas/TaskRunFilterStateName"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterState", "description": "Filter by `TaskRun.type` and `TaskRun.name`."}, "TaskRunFilterStateName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of task run state names to include"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterStateName", "description": "Filter by `TaskRun.state_name`."}, "TaskRunFilterStateType": {"properties": {"any_": {"items": {"$ref": "#/components/schemas/StateType"}, "type": "array", "description": "A list of task run state types to include"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterStateType", "description": "Filter by `TaskRun.state_type`."}, "TaskRunFilterSubFlowRuns": {"properties": {"exists_": {"type": "boolean", "title": "Exists ", "description": "If true, only include task runs that are subflow run parents; if false, exclude parent task runs"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterSubFlowRuns", "description": "Filter by `TaskRun.subflow_run`."}, "TaskRunFilterTags": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "all_": {"items": {"type": "string"}, "type": "array", "title": "All ", "description": "A list of tags. Task runs will be returned only if their tags are a superset of the list", "example": ["tag-1", "tag-2"]}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include task runs without tags"}}, "additionalProperties": false, "type": "object", "title": "TaskRunFilterTags", "description": "Filter by `TaskRun.tags`."}, "TaskRunPolicy": {"properties": {"max_retries": {"type": "integer", "title": "Max Retries", "description": "The maximum number of retries. Field is not used. Please use `retries` instead.", "default": 0, "deprecated": true}, "retry_delay_seconds": {"type": "number", "title": "Retry Delay Seconds", "description": "The delay between retries. Field is not used. Please use `retry_delay` instead.", "default": 0, "deprecated": true}, "retries": {"type": "integer", "title": "Retries", "description": "The number of retries."}, "retry_delay": {"anyOf": [{"type": "integer"}, {"items": {"type": "integer"}, "type": "array"}], "title": "Retry Delay", "description": "A delay time or list of delay times between retries, in seconds."}, "retry_jitter_factor": {"type": "number", "title": "Retry Jitter Factor", "description": "Determines the amount a retry should jitter"}}, "type": "object", "title": "TaskRunPolicy", "description": "Defines of how a task run should retry."}, "TaskRunResult": {"properties": {"input_type": {"type": "string", "enum": ["task_run"], "title": "Input Type", "default": "task_run"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["id"], "title": "TaskRunResult", "description": "Represents a task run result input to another task run."}, "TaskRunSort": {"type": "string", "enum": ["ID_DESC", "EXPECTED_START_TIME_ASC", "EXPECTED_START_TIME_DESC", "NAME_ASC", "NAME_DESC", "NEXT_SCHEDULED_START_TIME_ASC", "END_TIME_DESC"], "title": "TaskRunSort", "description": "Defines task run sorting options."}, "TaskRunUpdate": {"properties": {"name": {"type": "string", "title": "Name", "example": "my-task-run"}}, "additionalProperties": false, "type": "object", "title": "TaskRunUpdate", "description": "Data used by the Prefect REST API to update a task run"}, "UpdatedBy": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id", "description": "The id of the updater of the object."}, "type": {"type": "string", "title": "Type", "description": "The type of the updater of the object."}, "display_value": {"type": "string", "title": "Display Value", "description": "The display value for the updater."}}, "type": "object", "title": "UpdatedBy"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "Variable": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "maxLength": 255, "title": "Name", "description": "The name of the variable", "example": "my_variable"}, "value": {"type": "string", "maxLength": 5000, "title": "Value", "description": "The value of the variable", "example": "my-value"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of variable tags", "example": ["tag-1", "tag-2"]}}, "type": "object", "required": ["name", "value"], "title": "Variable", "description": "A PrefectBaseModel with an auto-generated UUID ID value and created /\nupdated timestamps, intended for compatibility with our standard ORM models.\n\nThe ID, created, and updated fields are reset on copy() and not included in\nequality comparisons."}, "VariableCreate": {"properties": {"name": {"type": "string", "maxLength": 255, "title": "Name", "description": "The name of the variable", "example": "my_variable"}, "value": {"type": "string", "maxLength": 5000, "title": "Value", "description": "The value of the variable", "example": "my-value"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of variable tags", "example": ["tag-1", "tag-2"]}}, "additionalProperties": false, "type": "object", "title": "VariableCreate", "description": "Data used by the Prefect REST API to create a Variable."}, "VariableFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/VariableFilterId"}], "title": "Id", "description": "Filter criteria for `Variable.id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/VariableFilterName"}], "title": "Name", "description": "Filter criteria for `Variable.name`"}, "value": {"allOf": [{"$ref": "#/components/schemas/VariableFilterValue"}], "title": "Value", "description": "Filter criteria for `Variable.value`"}, "tags": {"allOf": [{"$ref": "#/components/schemas/VariableFilterTags"}], "title": "Tags", "description": "Filter criteria for `Variable.tags`"}}, "additionalProperties": false, "type": "object", "title": "VariableFilter", "description": "Filter variables. Only variables matching all criteria will be returned"}, "VariableFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of variable ids to include"}}, "additionalProperties": false, "type": "object", "title": "VariableFilterId", "description": "Filter by `Variable.id`."}, "VariableFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of variables names to include"}, "like_": {"type": "string", "title": "Like ", "description": "A string to match variable names against. This can include SQL wildcard characters like `%` and `_`.", "example": "my_variable_%"}}, "additionalProperties": false, "type": "object", "title": "VariableFilterName", "description": "Filter by `Variable.name`."}, "VariableFilterTags": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "all_": {"items": {"type": "string"}, "type": "array", "title": "All ", "description": "A list of tags. Variables will be returned only if their tags are a superset of the list", "example": ["tag-1", "tag-2"]}, "is_null_": {"type": "boolean", "title": "Is Null ", "description": "If true, only include Variables without tags"}}, "additionalProperties": false, "type": "object", "title": "VariableFilterTags", "description": "Filter by `Variable.tags`."}, "VariableFilterValue": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of variables value to include"}, "like_": {"type": "string", "title": "Like ", "description": "A string to match variable value against. This can include SQL wildcard characters like `%` and `_`.", "example": "my-value-%"}}, "additionalProperties": false, "type": "object", "title": "VariableFilterValue", "description": "Filter by `Variable.value`."}, "VariableSort": {"type": "string", "enum": ["CREATED_DESC", "UPDATED_DESC", "NAME_DESC", "NAME_ASC"], "title": "VariableSort", "description": "Defines variables sorting options."}, "VariableUpdate": {"properties": {"name": {"type": "string", "maxLength": 255, "title": "Name", "description": "The name of the variable", "example": "my_variable"}, "value": {"type": "string", "maxLength": 5000, "title": "Value", "description": "The value of the variable", "example": "my-value"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags", "description": "A list of variable tags", "example": ["tag-1", "tag-2"]}}, "additionalProperties": false, "type": "object", "title": "VariableUpdate", "description": "Data used by the Prefect REST API to update a Variable."}, "WorkPoolCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the work pool."}, "description": {"type": "string", "title": "Description", "description": "A description of the work pool."}, "type": {"type": "string", "title": "Type", "description": "The work pool type.", "default": "prefect-agent"}, "base_job_template": {"type": "object", "title": "Base Job Template", "description": "The work pool's base job template."}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Pausing the work pool stops the delivery of all work.", "default": false}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "A concurrency limit for the work pool."}}, "additionalProperties": false, "type": "object", "title": "WorkPoolCreate", "description": "Data used by the Prefect REST API to create a work pool."}, "WorkPoolFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/WorkPoolFilterId"}], "title": "Id", "description": "Filter criteria for `WorkPool.id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/WorkPoolFilterName"}], "title": "Name", "description": "Filter criteria for `WorkPool.name`"}, "type": {"allOf": [{"$ref": "#/components/schemas/WorkPoolFilterType"}], "title": "Type", "description": "Filter criteria for `WorkPool.type`"}}, "additionalProperties": false, "type": "object", "title": "WorkPoolFilter", "description": "Filter work pools. Only work pools matching all criteria will be returned"}, "WorkPoolFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of work pool ids to include"}}, "additionalProperties": false, "type": "object", "title": "WorkPoolFilterId", "description": "Filter by `WorkPool.id`."}, "WorkPoolFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of work pool names to include"}}, "additionalProperties": false, "type": "object", "title": "WorkPoolFilterName", "description": "Filter by `WorkPool.name`."}, "WorkPoolFilterType": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of work pool types to include"}}, "additionalProperties": false, "type": "object", "title": "WorkPoolFilterType", "description": "Filter by `WorkPool.type`."}, "WorkPoolResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the work pool."}, "description": {"type": "string", "title": "Description", "description": "A description of the work pool."}, "type": {"type": "string", "title": "Type", "description": "The work pool type."}, "base_job_template": {"type": "object", "title": "Base Job Template", "description": "The work pool's base job template."}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Pausing the work pool stops the delivery of all work.", "default": false}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "A concurrency limit for the work pool."}, "default_queue_id": {"type": "string", "format": "uuid", "title": "Default Queue Id", "description": "The id of the pool's default queue."}, "status": {"allOf": [{"$ref": "#/components/schemas/WorkPoolStatus"}], "description": "The current status of the work pool."}}, "type": "object", "required": ["name", "type"], "title": "WorkPoolResponse", "description": "An ORM representation of a work pool"}, "WorkPoolStatus": {"type": "string", "enum": ["READY", "NOT_READY", "PAUSED"], "title": "WorkPoolStatus", "description": "Enumeration of work pool statuses."}, "WorkPoolUpdate": {"properties": {"description": {"type": "string", "title": "Description", "description": "A description of the work pool."}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Pausing the work pool stops the delivery of all work.", "default": false}, "base_job_template": {"type": "object", "title": "Base Job Template", "description": "The work pool's base job template."}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "A concurrency limit for the work pool."}}, "additionalProperties": false, "type": "object", "title": "WorkPoolUpdate", "description": "Data used by the Prefect REST API to update a work pool."}, "WorkQueue": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the work queue."}, "description": {"type": "string", "title": "Description", "description": "An optional description for the work queue.", "default": ""}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Whether or not the work queue is paused.", "default": false}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "An optional concurrency limit for the work queue."}, "priority": {"type": "integer", "minimum": 1.0, "title": "Priority", "description": "The queue's priority. Lower values are higher priority (1 is the highest).", "default": 1}, "work_pool_id": {"type": "string", "format": "uuid", "title": "Work Pool Id", "description": "The work pool with which the queue is associated."}, "filter": {"allOf": [{"$ref": "#/components/schemas/QueueFilter"}], "title": "Filter", "description": "DEPRECATED: Filter criteria for the work queue.", "deprecated": true}, "last_polled": {"type": "string", "format": "date-time", "title": "Last Polled", "description": "The last time an agent polled this queue for work."}}, "type": "object", "required": ["name"], "title": "WorkQueue", "description": "An ORM representation of a work queue"}, "WorkQueueCreate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the work queue."}, "description": {"type": "string", "title": "Description", "description": "An optional description for the work queue.", "default": ""}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Whether or not the work queue is paused.", "default": false}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "An optional concurrency limit for the work queue."}, "priority": {"type": "integer", "title": "Priority", "description": "The queue's priority. Lower values are higher priority (1 is the highest)."}, "filter": {"allOf": [{"$ref": "#/components/schemas/QueueFilter"}], "title": "Filter", "description": "DEPRECATED: Filter criteria for the work queue.", "deprecated": true}}, "additionalProperties": false, "type": "object", "title": "WorkQueueCreate", "description": "Data used by the Prefect REST API to create a work queue."}, "WorkQueueFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "id": {"allOf": [{"$ref": "#/components/schemas/WorkQueueFilterId"}], "title": "Id", "description": "Filter criteria for `WorkQueue.id`"}, "name": {"allOf": [{"$ref": "#/components/schemas/WorkQueueFilterName"}], "title": "Name", "description": "Filter criteria for `WorkQueue.name`"}}, "additionalProperties": false, "type": "object", "title": "WorkQueueFilter", "description": "Filter work queues. Only work queues matching all criteria will be\nreturned"}, "WorkQueueFilterId": {"properties": {"any_": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Any ", "description": "A list of work queue ids to include"}}, "additionalProperties": false, "type": "object", "title": "WorkQueueFilterId", "description": "Filter by `WorkQueue.id`."}, "WorkQueueFilterName": {"properties": {"any_": {"items": {"type": "string"}, "type": "array", "title": "Any ", "description": "A list of work queue names to include", "example": ["wq-1", "wq-2"]}, "startswith_": {"items": {"type": "string"}, "type": "array", "title": "Startswith ", "description": "A list of case-insensitive starts-with matches. For example,  passing 'marvin' will match 'marvin', and 'Marvin-robot', but not 'sad-marvin'.", "example": ["marvin", "Marvin-robot"]}}, "additionalProperties": false, "type": "object", "title": "WorkQueueFilterName", "description": "Filter by `WorkQueue.name`."}, "WorkQueueHealthPolicy": {"properties": {"maximum_late_runs": {"type": "integer", "title": "Maximum Late Runs", "description": "The maximum number of late runs in the work queue before it is deemed unhealthy. Defaults to `0`.", "default": 0}, "maximum_seconds_since_last_polled": {"type": "integer", "title": "Maximum Seconds Since Last Polled", "description": "The maximum number of time in seconds elapsed since work queue has been polled before it is deemed unhealthy. Defaults to `60`.", "default": 60}}, "type": "object", "title": "WorkQueueHealthPolicy", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "WorkQueueResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the work queue."}, "description": {"type": "string", "title": "Description", "description": "An optional description for the work queue.", "default": ""}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Whether or not the work queue is paused.", "default": false}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "An optional concurrency limit for the work queue."}, "priority": {"type": "integer", "minimum": 1.0, "title": "Priority", "description": "The queue's priority. Lower values are higher priority (1 is the highest).", "default": 1}, "work_pool_id": {"type": "string", "format": "uuid", "title": "Work Pool Id", "description": "The work pool with which the queue is associated."}, "filter": {"allOf": [{"$ref": "#/components/schemas/QueueFilter"}], "title": "Filter", "description": "DEPRECATED: Filter criteria for the work queue.", "deprecated": true}, "last_polled": {"type": "string", "format": "date-time", "title": "Last Polled", "description": "The last time an agent polled this queue for work."}, "work_pool_name": {"type": "string", "title": "Work Pool Name", "description": "The name of the work pool the work pool resides within."}, "status": {"allOf": [{"$ref": "#/components/schemas/WorkQueueStatus"}], "description": "The queue status."}}, "type": "object", "required": ["name"], "title": "WorkQueueResponse", "description": "An ORM representation of a work queue"}, "WorkQueueStatus": {"type": "string", "enum": ["READY", "NOT_READY", "PAUSED"], "title": "WorkQueueStatus", "description": "Enumeration of work queue statuses."}, "WorkQueueStatusDetail": {"properties": {"healthy": {"type": "boolean", "title": "Healthy", "description": "Whether or not the work queue is healthy."}, "late_runs_count": {"type": "integer", "title": "Late Runs Count", "description": "The number of late flow runs in the work queue.", "default": 0}, "last_polled": {"type": "string", "format": "date-time", "title": "Last Polled", "description": "The last time an agent polled this queue for work."}, "health_check_policy": {"allOf": [{"$ref": "#/components/schemas/WorkQueueHealthPolicy"}], "title": "Health Check Policy", "description": "The policy used to determine whether or not the work queue is healthy."}}, "type": "object", "required": ["healthy", "health_check_policy"], "title": "WorkQueueStatusDetail", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "WorkQueueUpdate": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the work queue."}, "description": {"type": "string", "title": "Description", "description": "An optional description for the work queue.", "default": ""}, "is_paused": {"type": "boolean", "title": "Is Paused", "description": "Whether or not the work queue is paused.", "default": false}, "concurrency_limit": {"type": "integer", "minimum": 0.0, "title": "Concurrency Limit", "description": "An optional concurrency limit for the work queue."}, "priority": {"type": "integer", "minimum": 1.0, "title": "Priority", "description": "The queue's priority. Lower values are higher priority (1 is the highest).", "default": 1}, "last_polled": {"type": "string", "format": "date-time", "title": "Last Polled", "description": "The last time an agent polled this queue for work."}, "filter": {"allOf": [{"$ref": "#/components/schemas/QueueFilter"}], "title": "Filter", "description": "DEPRECATED: Filter criteria for the work queue.", "deprecated": true}}, "additionalProperties": false, "type": "object", "title": "WorkQueueUpdate", "description": "Data used by the Prefect REST API to update a work queue."}, "WorkerFilter": {"properties": {"operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "description": "Operator for combining filter criteria. Defaults to 'and_'.", "default": "and_"}, "last_heartbeat_time": {"allOf": [{"$ref": "#/components/schemas/WorkerFilterLastHeartbeatTime"}], "title": "Last Heartbeat Time", "description": "Filter criteria for `Worker.last_heartbeat_time`"}}, "additionalProperties": false, "type": "object", "title": "WorkerFilter", "description": "Filter by `Worker.last_heartbeat_time`."}, "WorkerFilterLastHeartbeatTime": {"properties": {"before_": {"type": "string", "format": "date-time", "title": "Before ", "description": "Only include processes whose last heartbeat was at or before this time"}, "after_": {"type": "string", "format": "date-time", "title": "After ", "description": "Only include processes whose last heartbeat was at or after this time"}}, "additionalProperties": false, "type": "object", "title": "WorkerFilterLastHeartbeatTime", "description": "Filter by `Worker.last_heartbeat_time`."}, "WorkerFlowRunResponse": {"properties": {"work_pool_id": {"type": "string", "format": "uuid", "title": "Work Pool Id"}, "work_queue_id": {"type": "string", "format": "uuid", "title": "Work Queue Id"}, "flow_run": {"$ref": "#/components/schemas/FlowRun"}}, "type": "object", "required": ["work_pool_id", "work_queue_id", "flow_run"], "title": "WorkerFlowRunResponse", "description": "A base pydantic.BaseModel for all Prefect schemas and pydantic models.\n\nAs the basis for most Prefect schemas, this base model usually ignores extra\nfields that are passed to it at instantiation. Because adding new fields to\nAPI payloads is not considered a breaking change, this ensures that any\nPrefect client loading data from a server running a possibly-newer version\nof Prefect will be able to process those new fields gracefully. However,\nwhen PREFECT_TEST_MODE is on, extra fields are forbidden in order to catch\nsubtle unintentional testing errors."}, "WorkerResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "created": {"type": "string", "format": "date-time", "title": "Created"}, "updated": {"type": "string", "format": "date-time", "title": "Updated"}, "name": {"type": "string", "title": "Name", "description": "The name of the worker."}, "work_pool_id": {"type": "string", "format": "uuid", "title": "Work Pool Id", "description": "The work pool with which the queue is associated."}, "last_heartbeat_time": {"type": "string", "format": "date-time", "title": "Last Heartbeat Time", "description": "The last time the worker process sent a heartbeat."}, "heartbeat_interval_seconds": {"type": "integer", "title": "Heartbeat Interval Seconds", "description": "The number of seconds to expect between heartbeats sent by the worker."}, "status": {"allOf": [{"$ref": "#/components/schemas/WorkerStatus"}], "description": "Current status of the worker.", "default": "OFFLINE"}}, "type": "object", "required": ["name", "work_pool_id"], "title": "WorkerResponse", "description": "An ORM representation of a worker"}, "WorkerStatus": {"type": "string", "enum": ["ONLINE", "OFFLINE"], "title": "WorkerStatus", "description": "Enumeration of worker statuses."}}}}