name: Build and Deploy Docs

on:
  repository_dispatch:
    types:
      - update_docs
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build and deploy (e.g., "2.8.0" or "latest")'
        type: string
        required: true

jobs:
  build_and_deploy_docs:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs mike

    - name: Clone PrefectHQ/prefect
      run: |
        version="${{ github.event.client_payload.version }}"
        if [[ -z "$version" ]]; then
          version="${{ github.event.inputs.version }}"
        fi

        if [[ $version == "latest" ]]; then
          git clone --depth 1 https://github.com/PrefectHQ/prefect.git prefect_source
        else
          git clone --branch "$version" --depth 1 https://github.com/PrefectHQ/prefect.git prefect_source
        fi
      working-directory: ${{ github.workspace }}/.. 

    - name: Update docs
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "github-actions-bot@example.com"

        version="${{ github.event.client_payload.version }}"
        if [[ -z "$version" ]]; then
          version="${{ github.event.inputs.version }}"
        fi

        mike deploy --update-aliases --push --remote-branch=staging "$version" --docs-dir=../prefect_source/docs --deploy-prefix=site

    - name: Create Pull Request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        version="${{ github.event.client_payload.version }}"
        if [[ -z "$version" ]]; then
          version="${{ github.event.inputs.version }}"
        fi

        git checkout -b "update-docs-$version"
        git pull origin staging
        cp ../prefect_source/netlify.toml .
        cp ../prefect_source/mkdocs.yml .
        cp ../prefect_source/mkdocs.insiders.yml .
        git add netlify.toml mkdocs.yml mkdocs.insiders.yml
        git commit -m "Add configuration files"
        git push origin "update-docs-$version"
        gh pr create --base main --head "update-docs-$version" \
          --title "Update documentation for $version" \
          --body "Automated documentation update for version $version" \
          --label "documentation" --draft
