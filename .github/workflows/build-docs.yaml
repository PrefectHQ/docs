name: Build and Deploy Docs

on:
  repository_dispatch:
    types:
      - update_docs
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build and deploy (e.g., "2.8.0" or "latest")'
        type: string
        required: true

jobs:
  build_and_deploy_docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout docs
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.x


    - name: Clone PrefectHQ/prefect
      run: |
        version="${{ github.event.client_payload.version }}"
        if [[ -z "$version" ]]; then
          version="${{ github.event.inputs.version }}"
        fi

        if [[ $version == "latest" ]]; then
          git clone --depth 1 https://github.com/PrefectHQ/prefect.git prefect_source
        else
          git clone --branch "$version" --depth 1 https://github.com/PrefectHQ/prefect.git prefect_source
        fi
      working-directory: ${{ github.workspace }}/.. 

    - name: Install dependencies
      run: |
        pip install -e ".[dev]"
      working-directory: ${{ github.workspace }}/../prefect_source
        
    - name: Update docs
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "github-actions-bot@example.com"

        version="${{ github.event.client_payload.version }}"
        if [[ -z "$version" ]]; then
          version="${{ github.event.inputs.version }}"
        fi
        
        : # create the version branch, otherwise mike will create a branch
        : # that has non common history with main
        git checkout -b "update-docs-$version"
        git checkout main
        
        ln -s ../prefect_source/mkdocs.yml
        ln -s ../prefect_source/mkdocs.insiders.yml      
        ln -s ../prefect_source/src ./src
        ln -s ../prefect_source/docs ./docs
        
        mike deploy --update-aliases --branch="update-docs-$version" --prefix=site $version
        
        unlink ./src
        unlink ./docs
        unlink ./mkdocs.yml
        unlink ./mkdocs.insiders.yml

    - name: Create Pull Request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        version="${{ github.event.client_payload.version }}"
        if [[ -z "$version" ]]; then
          version="${{ github.event.inputs.version }}"
        fi
        git checkout "update-docs-$version"
        git add .
        git commit -m "Add configuration files"
        git push origin "update-docs-$version"
        gh pr create --base main --head "update-docs-$version" \
          --title "Update documentation for $version" \
          --body "Automated documentation update for version $version" \
          --label "documentation" --draft
